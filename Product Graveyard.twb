<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1206.1554                               -->
<workbook source-build='10.4.2 (10400.17.1206.1554)' source-platform='mac' version='10.4' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='ProductGraveyard' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Product Graveyard)' inline='true' name='federated.0tvh1fg1ui9cn81bidmej1cudm34' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Product Graveyard' name='google-sheets.195rdko0v0u4gy10opysl0e8en3q'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Product Graveyard' googleSheetId='1n4hvxXGEPftEV6Cr5gxUpfuEDrEWB3lQnCP_GuWS5qw' interpretationMode='256' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='lhazan@gmail.com' validate='no' workgroup-auth-mode='prompt' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.195rdko0v0u4gy10opysl0e8en3q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B1022:no:A1:B1022:0' header='yes' outcome='2'>
            <column datatype='string' name='Product' ordinal='0' />
            <column datatype='string' name='Description' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Description]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B1022:no:A1:B1022:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Category' datatype='string' name='[Calculation_2229000391002685440]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([Description], &apos;consulting&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;consultan&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;chip&apos;) THEN &apos;Chips&apos;&#10;ELSEIF CONTAINS([Description], &apos;iOS&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cleantech&apos;) THEN &apos;CleanTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;game&apos;) THEN &apos;Gaming&apos;&#10;ELSEIF CONTAINS([Description], &apos;gaming&apos;) THEN &apos;Gaming&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;graphic&apos;) THEN &apos;Graphics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;music&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;entertain&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;e-book&apos;) THEN &apos;Entertainment&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;medical&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;health&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;patient&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;pharm&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;drug&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;hospital&apos;) THEN &apos;Healthcare&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;education&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;school&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;student&apos;) THEN &apos;Education&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;staff&apos;) THEN &apos;Corporate Services&apos;&#10;ELSEIF CONTAINS([Description], &apos;manager&apos;) THEN &apos;Corporate Services&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;biotech&apos;) THEN &apos;BioTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;video&apos;) THEN &apos;Video&apos;&#10;ELSEIF CONTAINS([Description], &apos;security&apos;) THEN &apos;Security&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;automotive&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;vehicle&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;cars&apos;) THEN &apos;Automotive&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;commerce&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;payment&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;pricing&apos;) THEN &apos;Commerce&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;content&apos;) THEN &apos;Content&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketing&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;consumer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;comment&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;advertising&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;feedbacl&apos;) THEN &apos;Marketing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;retail&apos;) THEN &apos;Retail&apos;&#10;ELSEIF CONTAINS([Description], &apos;shop&apos;) THEN &apos;Retail&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;finance&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;mortgage&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;credit&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;lending&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;trading&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;invest&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;insurance&apos;) THEN &apos;Finance&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;manufacture&apos;) THEN &apos;Manufacturing&apos;&#10;ELSEIF CONTAINS([Description], &apos;manufacturing&apos;) THEN &apos;Manufacturing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;community&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;twitter&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;facebook&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;chat&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;messaging&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;conversation&apos;) THEN &apos;Social&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;search engine&apos;) THEN &apos;Search Engine&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Media&apos;) THEN &apos;Media&apos;&#10;ELSEIF CONTAINS([Description], &apos;Network&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;Broadband&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;telepho&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;infrastructure&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;VOIP&apos;) THEN &apos;Network&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Android&apos;) THEN &apos;Mobile App&apos;&#10;ELSEIF CONTAINS([Description], &apos;Mobile&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Web&apos;) THEN &apos;Web&apos;&#10;ELSEIF CONTAINS([Description], &apos;Browser&apos;) THEN &apos;Web&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Wearable&apos;) THEN &apos;IoT&apos;&#10;ELSEIF CONTAINS([Description], &apos;Sensor&apos;) THEN &apos;IoT&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;data&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;analytics&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;machine learning&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;predictive&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cloud&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;storage&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;upload&apos;) THEN &apos;Cloud&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;customer&apos;) THEN &apos;Customers - Other&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;electronic&apos;) THEN &apos;Other Electronic&apos;&#10;ELSEIF CONTAINS([Description], &apos;software&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;developer&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;code&apos;) THEN &apos;Other Software&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;email&apos;) THEN &apos;Email&apos;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;ELSE &apos;Other&apos;&#10;END' />
      </column>
      <column datatype='string' name='[Group]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_2229000391002685440]' new-bin='true'>
          <bin default-name='false' value='&quot;Fun&quot;'>
            <value>&quot;Entertainment&quot;</value>
            <value>&quot;Gaming&quot;</value>
            <value>&quot;Media&quot;</value>
            <value>&quot;Social&quot;</value>
            <value>&quot;Web&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hardware&quot;'>
            <value>&quot;Automotive&quot;</value>
            <value>&quot;BioTech&quot;</value>
            <value>&quot;Chips&quot;</value>
            <value>&quot;CleanTech&quot;</value>
            <value>&quot;IoT&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Industries&quot;'>
            <value>&quot;Education&quot;</value>
            <value>&quot;Finance&quot;</value>
            <value>&quot;Healthcare&quot;</value>
            <value>&quot;Retail&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Infrastructure&quot;'>
            <value>&quot;Cloud&quot;</value>
            <value>&quot;Network&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Others&quot;'>
            <value>&quot;Other&quot;</value>
            <value>&quot;Other Electronic&quot;</value>
            <value>&quot;Other Software&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Utilities&quot;'>
            <value>&quot;Email&quot;</value>
            <value>&quot;Graphics&quot;</value>
            <value>&quot;Search Engine&quot;</value>
            <value>&quot;Video&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;eComm and Business&quot;'>
            <value>&quot;Commerce&quot;</value>
            <value>&quot;Content&quot;</value>
            <value>&quot;Corporate Services&quot;</value>
            <value>&quot;Customers - Other&quot;</value>
            <value>&quot;Data &amp; Analytics&quot;</value>
            <value>&quot;Manufacturing&quot;</value>
            <value>&quot;Marketing&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/LauranH/Google Drive/Courses/Data_Projects/Product-Graveyard-Viz/Sheet1 (Product Graveyard).tde' schema='Extract' tablename='Extract' update-time='09/11/2018 07:47:26 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_2229000391002685440]' formula='IF CONTAINS([Description], &apos;consulting&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;consultan&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;chip&apos;) THEN &apos;Chips&apos;&#10;ELSEIF CONTAINS([Description], &apos;iOS&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cleantech&apos;) THEN &apos;CleanTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;game&apos;) THEN &apos;Gaming&apos;&#10;ELSEIF CONTAINS([Description], &apos;gaming&apos;) THEN &apos;Gaming&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;graphic&apos;) THEN &apos;Graphics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;music&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;entertain&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;e-book&apos;) THEN &apos;Entertainment&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;medical&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;health&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;patient&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;pharm&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;drug&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;hospital&apos;) THEN &apos;Healthcare&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;education&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;school&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;student&apos;) THEN &apos;Education&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;staff&apos;) THEN &apos;Corporate Services&apos;&#10;ELSEIF CONTAINS([Description], &apos;manager&apos;) THEN &apos;Corporate Services&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;biotech&apos;) THEN &apos;BioTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;video&apos;) THEN &apos;Video&apos;&#10;ELSEIF CONTAINS([Description], &apos;security&apos;) THEN &apos;Security&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;automotive&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;vehicle&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;cars&apos;) THEN &apos;Automotive&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;commerce&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;payment&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;pricing&apos;) THEN &apos;Commerce&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;content&apos;) THEN &apos;Content&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketing&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;consumer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;comment&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;advertising&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;feedbacl&apos;) THEN &apos;Marketing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;retail&apos;) THEN &apos;Retail&apos;&#10;ELSEIF CONTAINS([Description], &apos;shop&apos;) THEN &apos;Retail&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;finance&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;mortgage&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;credit&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;lending&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;trading&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;invest&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;insurance&apos;) THEN &apos;Finance&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;manufacture&apos;) THEN &apos;Manufacturing&apos;&#10;ELSEIF CONTAINS([Description], &apos;manufacturing&apos;) THEN &apos;Manufacturing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;community&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;twitter&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;facebook&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;chat&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;messaging&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;conversation&apos;) THEN &apos;Social&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;search engine&apos;) THEN &apos;Search Engine&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Media&apos;) THEN &apos;Media&apos;&#10;ELSEIF CONTAINS([Description], &apos;Network&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;Broadband&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;telepho&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;infrastructure&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;VOIP&apos;) THEN &apos;Network&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Android&apos;) THEN &apos;Mobile App&apos;&#10;ELSEIF CONTAINS([Description], &apos;Mobile&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Web&apos;) THEN &apos;Web&apos;&#10;ELSEIF CONTAINS([Description], &apos;Browser&apos;) THEN &apos;Web&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Wearable&apos;) THEN &apos;IoT&apos;&#10;ELSEIF CONTAINS([Description], &apos;Sensor&apos;) THEN &apos;IoT&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;data&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;analytics&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;machine learning&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;predictive&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cloud&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;storage&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;upload&apos;) THEN &apos;Cloud&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;customer&apos;) THEN &apos;Customers - Other&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;electronic&apos;) THEN &apos;Other Electronic&apos;&#10;ELSEIF CONTAINS([Description], &apos;software&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;developer&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;code&apos;) THEN &apos;Other Software&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;email&apos;) THEN &apos;Email&apos;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;ELSE &apos;Other&apos;&#10;END' />
            <calculation column='[Group]' formula='CASE [Calculation_2229000391002685440]&#10;  WHEN &quot;Entertainment&quot; THEN &quot;Fun&quot;&#10;  WHEN &quot;Gaming&quot; THEN &quot;Fun&quot;&#10;  WHEN &quot;Media&quot; THEN &quot;Fun&quot;&#10;  WHEN &quot;Social&quot; THEN &quot;Fun&quot;&#10;  WHEN &quot;Web&quot; THEN &quot;Fun&quot;&#10;  WHEN &quot;Automotive&quot; THEN &quot;Hardware&quot;&#10;  WHEN &quot;BioTech&quot; THEN &quot;Hardware&quot;&#10;  WHEN &quot;Chips&quot; THEN &quot;Hardware&quot;&#10;  WHEN &quot;CleanTech&quot; THEN &quot;Hardware&quot;&#10;  WHEN &quot;IoT&quot; THEN &quot;Hardware&quot;&#10;  WHEN &quot;Education&quot; THEN &quot;Industries&quot;&#10;  WHEN &quot;Finance&quot; THEN &quot;Industries&quot;&#10;  WHEN &quot;Healthcare&quot; THEN &quot;Industries&quot;&#10;  WHEN &quot;Retail&quot; THEN &quot;Industries&quot;&#10;  WHEN &quot;Cloud&quot; THEN &quot;Infrastructure&quot;&#10;  WHEN &quot;Network&quot; THEN &quot;Infrastructure&quot;&#10;  WHEN &quot;Other&quot; THEN &quot;Others&quot;&#10;  WHEN &quot;Other Electronic&quot; THEN &quot;Others&quot;&#10;  WHEN &quot;Other Software&quot; THEN &quot;Others&quot;&#10;  WHEN &quot;Email&quot; THEN &quot;Utilities&quot;&#10;  WHEN &quot;Graphics&quot; THEN &quot;Utilities&quot;&#10;  WHEN &quot;Search Engine&quot; THEN &quot;Utilities&quot;&#10;  WHEN &quot;Video&quot; THEN &quot;Utilities&quot;&#10;  WHEN &quot;Commerce&quot; THEN &quot;eComm and Business&quot;&#10;  WHEN &quot;Content&quot; THEN &quot;eComm and Business&quot;&#10;  WHEN &quot;Corporate Services&quot; THEN &quot;eComm and Business&quot;&#10;  WHEN &quot;Customers - Other&quot; THEN &quot;eComm and Business&quot;&#10;  WHEN &quot;Data &amp; Analytics&quot; THEN &quot;eComm and Business&quot;&#10;  WHEN &quot;Manufacturing&quot; THEN &quot;eComm and Business&quot;&#10;  WHEN &quot;Marketing&quot; THEN &quot;eComm and Business&quot;&#10;  ELSE [Calculation_2229000391002685440]&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1021' timestamp-start='2018-09-11 19:47:26.915' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Description</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1021</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;111.com.cn operates as an online portal for selling pharmaceutical products.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zumbox, a paperless postal system, allows businesses to deliver transactional mails electronically to their consumers digital&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1021</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Kore Virtual Machines is a game technology that aims to revolutionize interactive application development for entertainment a&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1021.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1021</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1021.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1021</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Above All Software&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zune Software&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1021</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;LiveMind&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_2229000391002685440</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_2229000391002685440]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_2229000391002685440</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <scale>1</scale>
              <width>21</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Automotive&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Web&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1021</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>84</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Group</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>21</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Fun&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;eComm and Business&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1021</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Mobile App&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>84</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.540921' measure-ordering='alphabetic' measure-percentage='0.459079' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Group]' palette='miller_stone_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Corporate Services&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;Healthcare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Other Software&quot;</bucket>
            </map>
            <map to='#7e756d'>
              <bucket>&quot;Industries&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;IoT&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;Utilities&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Infrastructure&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;Finance&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;Services &amp; Consulting&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Hardware&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Web&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;Mobile App&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;eComm and Business&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;Fun&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;Security&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Other Electronic&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Product Graveyard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;http://productgraveyard.com/&amp;quot;'>http://productgraveyard.com/</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Product Graveyard)' name='federated.0tvh1fg1ui9cn81bidmej1cudm34' />
          </datasources>
          <datasource-dependencies datasource='federated.0tvh1fg1ui9cn81bidmej1cudm34'>
            <column caption='Category' datatype='string' name='[Calculation_2229000391002685440]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Description], &apos;consulting&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;consultan&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;chip&apos;) THEN &apos;Chips&apos;&#10;ELSEIF CONTAINS([Description], &apos;iOS&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cleantech&apos;) THEN &apos;CleanTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;game&apos;) THEN &apos;Gaming&apos;&#10;ELSEIF CONTAINS([Description], &apos;gaming&apos;) THEN &apos;Gaming&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;graphic&apos;) THEN &apos;Graphics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;music&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;entertain&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;e-book&apos;) THEN &apos;Entertainment&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;medical&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;health&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;patient&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;pharm&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;drug&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;hospital&apos;) THEN &apos;Healthcare&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;education&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;school&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;student&apos;) THEN &apos;Education&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;staff&apos;) THEN &apos;Corporate Services&apos;&#10;ELSEIF CONTAINS([Description], &apos;manager&apos;) THEN &apos;Corporate Services&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;biotech&apos;) THEN &apos;BioTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;video&apos;) THEN &apos;Video&apos;&#10;ELSEIF CONTAINS([Description], &apos;security&apos;) THEN &apos;Security&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;automotive&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;vehicle&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;cars&apos;) THEN &apos;Automotive&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;commerce&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;payment&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;pricing&apos;) THEN &apos;Commerce&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;content&apos;) THEN &apos;Content&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketing&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;consumer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;comment&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;advertising&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;feedbacl&apos;) THEN &apos;Marketing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;retail&apos;) THEN &apos;Retail&apos;&#10;ELSEIF CONTAINS([Description], &apos;shop&apos;) THEN &apos;Retail&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;finance&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;mortgage&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;credit&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;lending&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;trading&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;invest&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;insurance&apos;) THEN &apos;Finance&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;manufacture&apos;) THEN &apos;Manufacturing&apos;&#10;ELSEIF CONTAINS([Description], &apos;manufacturing&apos;) THEN &apos;Manufacturing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;community&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;twitter&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;facebook&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;chat&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;messaging&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;conversation&apos;) THEN &apos;Social&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;search engine&apos;) THEN &apos;Search Engine&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Media&apos;) THEN &apos;Media&apos;&#10;ELSEIF CONTAINS([Description], &apos;Network&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;Broadband&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;telepho&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;infrastructure&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;VOIP&apos;) THEN &apos;Network&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Android&apos;) THEN &apos;Mobile App&apos;&#10;ELSEIF CONTAINS([Description], &apos;Mobile&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Web&apos;) THEN &apos;Web&apos;&#10;ELSEIF CONTAINS([Description], &apos;Browser&apos;) THEN &apos;Web&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Wearable&apos;) THEN &apos;IoT&apos;&#10;ELSEIF CONTAINS([Description], &apos;Sensor&apos;) THEN &apos;IoT&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;data&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;analytics&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;machine learning&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;predictive&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cloud&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;storage&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;upload&apos;) THEN &apos;Cloud&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;customer&apos;) THEN &apos;Customers - Other&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;electronic&apos;) THEN &apos;Other Electronic&apos;&#10;ELSEIF CONTAINS([Description], &apos;software&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;developer&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;code&apos;) THEN &apos;Other Software&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;email&apos;) THEN &apos;Email&apos;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='string' name='[Group]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_2229000391002685440]' new-bin='true'>
                <bin default-name='false' value='&quot;Fun&quot;'>
                  <value>&quot;Entertainment&quot;</value>
                  <value>&quot;Gaming&quot;</value>
                  <value>&quot;Media&quot;</value>
                  <value>&quot;Social&quot;</value>
                  <value>&quot;Web&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hardware&quot;'>
                  <value>&quot;Automotive&quot;</value>
                  <value>&quot;BioTech&quot;</value>
                  <value>&quot;Chips&quot;</value>
                  <value>&quot;CleanTech&quot;</value>
                  <value>&quot;IoT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Industries&quot;'>
                  <value>&quot;Education&quot;</value>
                  <value>&quot;Finance&quot;</value>
                  <value>&quot;Healthcare&quot;</value>
                  <value>&quot;Retail&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Infrastructure&quot;'>
                  <value>&quot;Cloud&quot;</value>
                  <value>&quot;Network&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Other&quot;</value>
                  <value>&quot;Other Electronic&quot;</value>
                  <value>&quot;Other Software&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Utilities&quot;'>
                  <value>&quot;Email&quot;</value>
                  <value>&quot;Graphics&quot;</value>
                  <value>&quot;Search Engine&quot;</value>
                  <value>&quot;Video&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;eComm and Business&quot;'>
                  <value>&quot;Commerce&quot;</value>
                  <value>&quot;Content&quot;</value>
                  <value>&quot;Corporate Services&quot;</value>
                  <value>&quot;Customers - Other&quot;</value>
                  <value>&quot;Data &amp; Analytics&quot;</value>
                  <value>&quot;Manufacturing&quot;</value>
                  <value>&quot;Marketing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_2229000391002685440]' derivation='None' name='[none:Calculation_2229000391002685440:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[Group]' direction='DESC' using='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[sum:Number of Records:qk]' />
          <sort class='computed' column='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Calculation_2229000391002685440:nk]' direction='DESC' using='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[sum:Number of Records:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[Group]' />
              <text column='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0tvh1fg1ui9cn81bidmej1cudm34].[Group] / [federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Calculation_2229000391002685440:nk])</rows>
        <cols>[federated.0tvh1fg1ui9cn81bidmej1cudm34].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Product Graveyard)' name='federated.0tvh1fg1ui9cn81bidmej1cudm34' />
          </datasources>
          <datasource-dependencies datasource='federated.0tvh1fg1ui9cn81bidmej1cudm34'>
            <column caption='Category' datatype='string' name='[Calculation_2229000391002685440]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Description], &apos;consulting&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;consultan&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;chip&apos;) THEN &apos;Chips&apos;&#10;ELSEIF CONTAINS([Description], &apos;iOS&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cleantech&apos;) THEN &apos;CleanTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;game&apos;) THEN &apos;Gaming&apos;&#10;ELSEIF CONTAINS([Description], &apos;gaming&apos;) THEN &apos;Gaming&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;graphic&apos;) THEN &apos;Graphics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;music&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;entertain&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;e-book&apos;) THEN &apos;Entertainment&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;medical&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;health&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;patient&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;pharm&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;drug&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;hospital&apos;) THEN &apos;Healthcare&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;education&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;school&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;student&apos;) THEN &apos;Education&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;staff&apos;) THEN &apos;Corporate Services&apos;&#10;ELSEIF CONTAINS([Description], &apos;manager&apos;) THEN &apos;Corporate Services&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;biotech&apos;) THEN &apos;BioTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;video&apos;) THEN &apos;Video&apos;&#10;ELSEIF CONTAINS([Description], &apos;security&apos;) THEN &apos;Security&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;automotive&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;vehicle&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;cars&apos;) THEN &apos;Automotive&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;commerce&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;payment&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;pricing&apos;) THEN &apos;Commerce&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;content&apos;) THEN &apos;Content&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketing&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;consumer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;comment&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;advertising&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;feedbacl&apos;) THEN &apos;Marketing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;retail&apos;) THEN &apos;Retail&apos;&#10;ELSEIF CONTAINS([Description], &apos;shop&apos;) THEN &apos;Retail&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;finance&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;mortgage&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;credit&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;lending&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;trading&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;invest&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;insurance&apos;) THEN &apos;Finance&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;manufacture&apos;) THEN &apos;Manufacturing&apos;&#10;ELSEIF CONTAINS([Description], &apos;manufacturing&apos;) THEN &apos;Manufacturing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;community&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;twitter&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;facebook&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;chat&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;messaging&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;conversation&apos;) THEN &apos;Social&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;search engine&apos;) THEN &apos;Search Engine&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Media&apos;) THEN &apos;Media&apos;&#10;ELSEIF CONTAINS([Description], &apos;Network&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;Broadband&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;telepho&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;infrastructure&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;VOIP&apos;) THEN &apos;Network&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Android&apos;) THEN &apos;Mobile App&apos;&#10;ELSEIF CONTAINS([Description], &apos;Mobile&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Web&apos;) THEN &apos;Web&apos;&#10;ELSEIF CONTAINS([Description], &apos;Browser&apos;) THEN &apos;Web&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Wearable&apos;) THEN &apos;IoT&apos;&#10;ELSEIF CONTAINS([Description], &apos;Sensor&apos;) THEN &apos;IoT&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;data&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;analytics&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;machine learning&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;predictive&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cloud&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;storage&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;upload&apos;) THEN &apos;Cloud&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;customer&apos;) THEN &apos;Customers - Other&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;electronic&apos;) THEN &apos;Other Electronic&apos;&#10;ELSEIF CONTAINS([Description], &apos;software&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;developer&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;code&apos;) THEN &apos;Other Software&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;email&apos;) THEN &apos;Email&apos;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2229000391002685440]' derivation='None' name='[none:Calculation_2229000391002685440:nk]' pivot='key' type='nominal' />
            <column-instance column='[Description]' derivation='None' name='[none:Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Calculation_2229000391002685440:nk]'>
            <groupfilter function='member' level='[none:Calculation_2229000391002685440:nk]' member='&quot;Other&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Calculation_2229000391002685440:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Description:nk]' value='660' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Calculation_2229000391002685440:nk] / ([federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Product:nk] / [federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Description:nk]))</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Total Dead by Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Product Graveyard)' name='federated.0tvh1fg1ui9cn81bidmej1cudm34' />
          </datasources>
          <datasource-dependencies datasource='federated.0tvh1fg1ui9cn81bidmej1cudm34'>
            <column caption='Category' datatype='string' name='[Calculation_2229000391002685440]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([Description], &apos;consulting&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;consultan&apos;) THEN &apos;Services &amp; Consulting&apos;&#10;ELSEIF CONTAINS([Description], &apos;chip&apos;) THEN &apos;Chips&apos;&#10;ELSEIF CONTAINS([Description], &apos;iOS&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cleantech&apos;) THEN &apos;CleanTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;game&apos;) THEN &apos;Gaming&apos;&#10;ELSEIF CONTAINS([Description], &apos;gaming&apos;) THEN &apos;Gaming&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;graphic&apos;) THEN &apos;Graphics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;music&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;entertain&apos;) THEN &apos;Entertainment&apos;&#10;ELSEIF CONTAINS([Description], &apos;e-book&apos;) THEN &apos;Entertainment&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;medical&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;health&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;patient&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;pharm&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;drug&apos;) THEN &apos;Healthcare&apos;&#10;ELSEIF CONTAINS([Description], &apos;hospital&apos;) THEN &apos;Healthcare&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;education&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;school&apos;) THEN &apos;Education&apos;&#10;ELSEIF CONTAINS([Description], &apos;student&apos;) THEN &apos;Education&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;staff&apos;) THEN &apos;Corporate Services&apos;&#10;ELSEIF CONTAINS([Description], &apos;manager&apos;) THEN &apos;Corporate Services&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;biotech&apos;) THEN &apos;BioTech&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;video&apos;) THEN &apos;Video&apos;&#10;ELSEIF CONTAINS([Description], &apos;security&apos;) THEN &apos;Security&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;automotive&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;vehicle&apos;) THEN &apos;Automotive&apos;&#10;ELSEIF CONTAINS([Description], &apos;cars&apos;) THEN &apos;Automotive&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;commerce&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;payment&apos;) THEN &apos;Commerce&apos;&#10;ELSEIF CONTAINS([Description], &apos;pricing&apos;) THEN &apos;Commerce&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;content&apos;) THEN &apos;Content&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketing&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;consumer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;comment&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;advertising&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;marketer&apos;) THEN &apos;Marketing&apos;&#10;ELSEIF CONTAINS([Description], &apos;feedbacl&apos;) THEN &apos;Marketing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;retail&apos;) THEN &apos;Retail&apos;&#10;ELSEIF CONTAINS([Description], &apos;shop&apos;) THEN &apos;Retail&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;finance&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;mortgage&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;credit&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;lending&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;trading&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;invest&apos;) THEN &apos;Finance&apos;&#10;ELSEIF CONTAINS([Description], &apos;insurance&apos;) THEN &apos;Finance&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;manufacture&apos;) THEN &apos;Manufacturing&apos;&#10;ELSEIF CONTAINS([Description], &apos;manufacturing&apos;) THEN &apos;Manufacturing&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;community&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;twitter&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;facebook&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;chat&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;messaging&apos;) THEN &apos;Social&apos;&#10;ELSEIF CONTAINS([Description], &apos;conversation&apos;) THEN &apos;Social&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;search engine&apos;) THEN &apos;Search Engine&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Media&apos;) THEN &apos;Media&apos;&#10;ELSEIF CONTAINS([Description], &apos;Network&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;Broadband&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;telepho&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;infrastructure&apos;) THEN &apos;Network&apos;&#10;ELSEIF CONTAINS([Description], &apos;VOIP&apos;) THEN &apos;Network&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Android&apos;) THEN &apos;Mobile App&apos;&#10;ELSEIF CONTAINS([Description], &apos;Mobile&apos;) THEN &apos;Mobile App&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Web&apos;) THEN &apos;Web&apos;&#10;ELSEIF CONTAINS([Description], &apos;Browser&apos;) THEN &apos;Web&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;Wearable&apos;) THEN &apos;IoT&apos;&#10;ELSEIF CONTAINS([Description], &apos;Sensor&apos;) THEN &apos;IoT&apos;&#10;&#10;&#10;ELSEIF CONTAINS([Description], &apos;data&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;analytics&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;machine learning&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;ELSEIF CONTAINS([Description], &apos;predictive&apos;) THEN &apos;Data &amp; Analytics&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;cloud&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;storage&apos;) THEN &apos;Cloud&apos;&#10;ELSEIF CONTAINS([Description], &apos;upload&apos;) THEN &apos;Cloud&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;customer&apos;) THEN &apos;Customers - Other&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;electronic&apos;) THEN &apos;Other Electronic&apos;&#10;ELSEIF CONTAINS([Description], &apos;software&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;developer&apos;) THEN &apos;Other Software&apos;&#10;ELSEIF CONTAINS([Description], &apos;code&apos;) THEN &apos;Other Software&apos;&#10;&#10;ELSEIF CONTAINS([Description], &apos;email&apos;) THEN &apos;Email&apos;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;ELSE &apos;Other&apos;&#10;END' />
            </column>
            <column datatype='string' name='[Description]' role='dimension' type='nominal' />
            <column datatype='string' name='[Group]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_2229000391002685440]' new-bin='true'>
                <bin default-name='false' value='&quot;Fun&quot;'>
                  <value>&quot;Entertainment&quot;</value>
                  <value>&quot;Gaming&quot;</value>
                  <value>&quot;Media&quot;</value>
                  <value>&quot;Social&quot;</value>
                  <value>&quot;Web&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hardware&quot;'>
                  <value>&quot;Automotive&quot;</value>
                  <value>&quot;BioTech&quot;</value>
                  <value>&quot;Chips&quot;</value>
                  <value>&quot;CleanTech&quot;</value>
                  <value>&quot;IoT&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Industries&quot;'>
                  <value>&quot;Education&quot;</value>
                  <value>&quot;Finance&quot;</value>
                  <value>&quot;Healthcare&quot;</value>
                  <value>&quot;Retail&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Infrastructure&quot;'>
                  <value>&quot;Cloud&quot;</value>
                  <value>&quot;Network&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Others&quot;'>
                  <value>&quot;Other&quot;</value>
                  <value>&quot;Other Electronic&quot;</value>
                  <value>&quot;Other Software&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Utilities&quot;'>
                  <value>&quot;Email&quot;</value>
                  <value>&quot;Graphics&quot;</value>
                  <value>&quot;Search Engine&quot;</value>
                  <value>&quot;Video&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;eComm and Business&quot;'>
                  <value>&quot;Commerce&quot;</value>
                  <value>&quot;Content&quot;</value>
                  <value>&quot;Corporate Services&quot;</value>
                  <value>&quot;Customers - Other&quot;</value>
                  <value>&quot;Data &amp; Analytics&quot;</value>
                  <value>&quot;Manufacturing&quot;</value>
                  <value>&quot;Marketing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[sum:Number of Records:qk]' />
              <text column='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[Group]' />
              <text column='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[sum:Number of Records:qk]' />
              <color column='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[Group]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Product Graveyard'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[Group]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tvh1fg1ui9cn81bidmej1cudm34].[Group]</field>
            <field>[federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Calculation_2229000391002685440:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tvh1fg1ui9cn81bidmej1cudm34].[none:Calculation_2229000391002685440:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Total Dead by Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tvh1fg1ui9cn81bidmej1cudm34].[Group]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tvh1fg1ui9cn81bidmej1cudm34].[Group]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Product Graveyard' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Total Dead by Group' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3xcV5338c+5d6pGvUuWJVe59xo7iZM4hYQ0EkgCBBZYWoBd2MYuLPta
      2F3K7gLPss/DFjqEFiAQ0ovtJHaKe1VcZFuWbPWu6e3e8/wh23EcF0memTvlvF8vJZY1M/cr
      S3N+955z7jlCSilRFEVRco5mdQBFURTFGqoAKIqi5ChVABRFUXKUzeoAiqKMXyAUpm9whM6e
      AXoGhukdGGbI62PYGyAQDBOJxQiGIsTicSLR2NnnedwuEOBxufDkufC4nRQVeCgpzKeyvITy
      kkKqyoqZWleNpqnzw2wn1CCwoqS3YW+AY20dHDnRzon2bk609zA44iOZb127zUZ5SSGTa8qZ
      OaWOximTaKitorjQk7RjKqmnCoCipJlhr59jbZ1s33+Ewy3ttHf3YabB29Rus1FbWcqi2dNY
      OGsqi+ZMw25TnQiZTBUARUkDfYMjvL7nILveOMaB5lZM07Q60mXZ7TYWNE5h7dJ5LJs3g+LC
      fKsjKeOkCoCiWKRvcISdB5rZsquJwy2nMM3MfSueWwyuXT4fu11dGWQCVQAUJYVisTgHj5/k
      pW372LyjCSMDzvTHy2G3cdWSOdxz89U01FZaHUe5BFUAFCUFYrE4m3ce4IlN22jr7E3qAG66
      EEIws6GWW65ZxjXLF+BQVwVpRxUARUmiWCzOM5t38sSLW+kbHLE6jmWqK0q45+aruW7lQlUI
      0ogqAIqSBNFYnI2v7+WRp15i2BewOk7aUIUgvagCoCgJFI3F2bLzAL9//lU6egasjpO2JleX
      c/9t67hqyVx0Xd1wZhVVABQlQY61dfK93zzN0dYO1Lvq8gSwbH4jD955PVPqqq2Ok5NUAVCU
      KzTsC/CrJ19kw6t7snJWT7I57DZuv34V99+2DqfDbnWcnKIKgKJcgY2v7+HR516ls1d191yp
      mopSPn7/bSyZO93qKDlDFQBFmYBhn59fPfkSL7yyOy2WacgWdruNW69Zzntvvw63y2l1nKyn
      CoCijNP+wy387yNPq0HeJJpaV82n338HMxpqrY6S1VQBUJQxisbiPLFpK7984kXV158CeW4n
      n7j/naxbucDqKFlLFQBFGYNAKMy3fvQoew4eUzN8Ushht/He26/jXTettTpKVlIFQFEuo7N3
      gK/9969p7+m3OkpO0jTBO65ZwQfuWo/b5bA6TlZRBUBRLmH/4Rb+78OP0zeUu8s4pItl82by
      mQ/cSYladjphVAFQlIvY2XSUb/3wd4QiUaujKKdNmVTF3378PmoqSq2OkhVUAVCUC3h801Z+
      8vsXMmJjllxTW1nGP3z6faoIJIAqAIpynkefe4WfP74pJ5ZszlQ1FaV88ZMPMLmmwuooGU0V
      AEU5h2r8M0dZcSFf/rMHVRG4AmoZPkU57fGNr6vGP4MMDHv5+v/+mq6+QaujZCxVABQF2Lzj
      AD/5/Quq8c8wnb2D/PN3f6mKwASpAqDkvP2HW/jOTx9Ta/pkqM7eAb75g9/hC4SsjpJxVAFQ
      ctqxtk6++aNH1dIOGe74qS7+82ePEQqrKbvjoQqAkrOGfX6+/ePf4/UHrY6iJMDOpqP8/PGN
      VsfIKKoAKDkpGovznZ8+ptbxzyJSSp7dspPHNrxmdZSMoQqAknOklPzssQ3sOXjc6ihKghmG
      ySNPb+aNo21WR8kIqgAoOUVKyZadTTz10naroyhJEgpH+K9fPsmQ1291lLSnCoCSU7p6B/nB
      b59V0z2zXEdPPz/87bNWx0h7qgAoOSMai/P93z6jBn1zxOt7DvH8K7usjpHWVAFQcoKUko2v
      7VH9/jnEME1+9thGTnX1WR0lbakCoOSEzt4BfvrYBqtjKCnmD4b4wW+fJRY3rI6SllQBULJe
      NBbnp3/YQFit65+Tmo62smXnAatjpCVVAJSsJqXk9T0H2bH/iNVRFIsYhsmvnnxJzQq6AFUA
      lKwWDEV4+I8bUXN+clvf4Ai/euJFq2OkHVUAlKwlpeR3z22hf8hrdRQlDWzZ1UTLqS6rY6QV
      VQCUrNU3OMIzm3daHUNJE6FwlJ89ptYKOpcqAEpWklLyyydfVAO/yls0Nbey642jVsdIG6oA
      KFmpraOXzTvUzA/lreKGwaPPvmJ1jLShCoCSdaSU/ObZzZimGvpV3q65tUNdBZymCoCSdXoH
      h3l9zyGrYyhpSl0FvEkVACWrSCl5fONWtdibcknHTnZy8JhaMloVACWrBIJhtuxosjqGkuai
      sTibXt9ndQzLqQKgZA0pJRte24M3oFb7VC7v9X2H6OodtDqGpVQBULJGNBbn+VfV8r/K2ASC
      YTbn+BpBqgAoWeNYWwedOX5Gp4zPlh1NxHN4pVBVAJSsIKVk01bVp6uMT1f/IDubcndKqCoA
      SlaIRGPsONBsdQwlwxiGyY4DubtSrCoASlbYf7hFbfWoTMiOA834AyGrY1hCFQAl40kpeXX3
      QatjKBkqEAxzoLnV6hiWUAVAyXiRaIzdaq9fZYIM0+T1Pbl5AqEKgJLxDh0/iU/N/VeuwL4j
      J3JyNpAqAEpGk1KybV/uDuIpiRGORGnr7LU6RsqpAqBkNCklR1s7rI6hZLhINMa+wy1Wx0g5
      VQCUjDbk9dPS3m11DCULHDhywuoIKacKgJLRjrV1qpU/lYRoae/OuXEAVQCUjCWlZI+a/aMk
      SC6OA6gCoGQsU/X/KwkUicZybo8AVQCUjBWLxekZGLY6hpJFcm08SRUAJWN19g7gD+bmLfxK
      crS291gdIaVUAVAyVk//kNURlCzTNziSUwPBqgAoGUlKSWtHbg3YKckXi8fp6B2wOkbKqAKg
      ZKzBEZ/VEZQsYxgmA0Neq2OkjCoASkaSUtKVQ2dqSmrEDYPuHOpaVAVAyUhSjvbXKkqiDXv9
      VkdIGVUAlIwkkQz7AlbHULLQkDd3uhZVAVAyUjAUIRKNWR0jbRRXVPPO9WtZv2QGuibI8+Sh
      C4GWX8HSGWVWx8sow97cObGwWR1AUSYiEAxbHSF9CCf3v2MVzz3zItVzlnHzojjVc5bQc7KV
      N7qjrJifT2nVZA4eOEh32MbaJY34ejtp6gxS4dGprSmlfTDC/KmVHD96jNa+3OkCuRB/Dv1u
      qSsAJSMFQrnzJr0sRzGB/jba+r1s3X6QkppSwnGDwcFhwlGDkvx8OgZMrls1k+vWriY23Mf8
      5SuonzSZv/jQ7VQ44fabVtPfM0xBoQdh9fdjMTUGoChpThWAcxhx3HYnGmB3u9DMOAODI7S1
      djAcNjl64hiHjncibTZKy8qYP3cOHiGxo7Fv7w6e232CzTubWbFiPpOLVAHIpd8tVQCUjBSN
      xa2OkD7igww6q7n7uhV85LZlHNjfQrcvws1XL2FysQN5pkWXcLKjl3g4wEgwQExCKBpFAuVF
      eXR1DTKptjznG4VcWl5cjQEoGSmqBoDPIfnjY89QVVZMdE8TfSMhtN6ddJcU4B/x095qQkzy
      2IvDROKSE8WFYEQZ9EXo7Bht7PbufYOyAicvjXjJ9dIqJcTjBjabbnWUpFMFQFGyQDwWpaP7
      zaUxzHic3r633tAUipgA9A28+ffG6WVvQqEA7aHcmf1yKVJKorF4ThSAXL/aUxRFyVmqAChK
      ltJtOnquj+hOgNAEbpfD6hgpobqAlIzkdjutjpDWlq1aw8IaFx63k1f2HGVuYz26PY8qzcsL
      zV4WTCmltKKK49s28tQBtarquQQgRG5UTnUFoGQkh02du1zKG/t287M/vky/qePvOsWvntjE
      gc5h9h44wr59e/nF4y8xEPCysyV3Fj4bK7crd04uVAFQMpLTYbc6QlqLCTvvf/etDB8/SIs3
      ghQurppSwNbjfQCUNcxE62ulL6BmU53P43ZZHSFlVAFQMlJhfp7VEdLaLeuv5fierbywpxUp
      YfaiJZw6uB9/bHQm0A0rZvDStmOYFudMRw577lxd5s53qmSVkqICqyOkNX8wSMPs+UyeBVtf
      fY0SR4iX9pze8NxRQP+xI3T6ItaGTFMVpUVWR0gZVQCUjKRpggKPG19AbQp/IZs3vfiWz1u3
      7X3zk6iPTXtyZ8nj8cqlkwvVBaRkJCFETp2pKalTVqwKgKKkNQGUFOZbHUPJMpoQlKorAEVJ
      b0IIqitKrY6hZBld11QXkKKkOyEEk6rUTldKYtlsOtVlxVbHSBlVAJSMNbm6wuoISpYp8ORR
      WlJodYyUUQVAyVgNk6qsjqBkmfKSQnQtd5rF3PlOlazjcTvVQLCSUPNmNFgdIaVUAVAyltA0
      5kyfbHUMJUtoQlBXXW51jJRSBUDJWAKYN3OK1TGULGG326ivrbQ6RkqpAqBkLCEE9TVqIFhJ
      jLLiQuprVAFQlIwxc8oktTKokhAzG2rR9dxqEnPru1WyjsNuY870eqtjKBlOE4JFc6ZZHSPl
      VAFQMpoQgqVzZ1gdQ8lwDoedmVMmWR0j5VQBUDKaEIJl82egabmxhZ+SHJNrKqityL07y1UB
      UDJeTUUpc6fn1vxtJXGEEFy3cmHO9f+DKgBKFtA0jTVL51gdQ8lQbqeDRbNzr/8fVAFQssSa
      JXNVN5AyIVPqqnLuBrAzVAFQskJhvkd1AynjJoTg6mXzrI5hGVUAlKygaYJ1KxdYHUPJMCWF
      +axaONvqGJZRBUDJGisWNuJxu6yOoWSQxXOmU5ZDyz+fTxUAJWsU5Xu4fvUiq2MoGcLpsHND
      jv++qAKgZI0z0/k0oQaDlcubXl/D/MYpVsewlCoASlaZpt7UyhjomsYNqxdbHcNyqgAoWUUT
      gve84xrUNYByKRWlRTk9++cMVQCUrDOvcQqz1UYxykUIIXjndStxOR1WR7GcKgBK1tGE4D23
      XquuApQLqiwrVt0/p6kCoGSlxXOmM0tdBSjn0YTg9utX4clT04VBFQAlS2lCcN+t16oZQcpb
      VJWXcNOaJVbHSBuqAChZa8mc6SxRewUop9l0jXtvuVr1/Z9DFQAlbUkpkdJEmsabH9Ic8/OF
      ELz/zuux5eAyv8rbzZ5Wr2b+nMdmdQBFgdONvRnHMCJEIz4ioUFiUT9GPIxpxM8+TmgaNnse
      NnseDmcRbk8FQtPRNBtCvL2hn1pXze3Xr+axDa+l8ttR0ozb6eDBu25QZ//nUQVAsYyUEtOM
      EQ724x85RdDfQzTiRZrxyz/5NCE07I583PlVFBRPwZ1XjqY7EKf7/oUQ3HfrNWzeeYDBYV+y
      vhUljQkhuG7VImZPU5MCzieklNLqEEpukVISjwUY7j+Kb6SNaHg4Ya9td+TjKayjuLwRp7MI
      oekAbN9/hG/87yOY6tc959RUlPKNv/4IRQUeq6OkHXUFoKTMmYZ/qO8QwwNHMY1owo8Ri/oZ
      7j/MyEAz+UX1lFbOx5VXyooFjVy1ZC6v7n4j4cdU0pfDbuMDd69Xjf9FqAKgJN2Z/v3BvoMM
      9R3CiIdTcEwT33Ar/pGTFJc1UlG7jI/ffysHj7cxNOJP+vEV6wkhWLdyIWuWzLU6StpS0yOU
      pJJSEg720d6yif6uPSlp/N96fJOh/sO0NT+NTY7wqffefnZ8QMluNRUlPHjnDVbHSGuqAChJ
      I6XJyMBR2ls2EfR3WZolEh6ivWUDUyvD3H7dCkuzKMmX53Lyqffdobp+LkMVACUpTNNgoGc/
      3e1bU37WfzFSmvR37eGmpW7mTq+zOo6SJLqm8a6b16plwcdAFQAl4UwzTl/HDvq79sI4btxK
      laC3lXuvLaG4wG11FCXBhBBcv3oR77pxjdVRMoIqAEpCnTnLHuo/bHWUS8rTvdy9tgibbnUS
      JZFmNtTygbvWY1M/2DFRBUBJmDN9/oO96T/VUgiYPdnJ3VdXoMaEs0NFaRGffvBO1e8/DqoA
      KAkhpSTo76GnY4fVUcZleWMe1ywsUTODMlxpUQGf/eDdNNRWWh0lo6gCoCREPBaiq+2VcS3j
      kC5uX13GdcumWR1DmaA8l5MP3XOTGvSdAFUAlCs22u+/m3gsYHWUCTHNGO9cVcDSudOtjqKM
      k9vp4KP3vYNrVyywOkpGUgVAuSJSSgLeTkYGj1kd5YrEo0N89O5FLFBnkRnD6bDzoXtvVts7
      XgFVAJQrIqVBf/deq2MkRGCwib/92D2qCGQAt9PBR+69hVuuXmZ1lIymCoAyYaNn/x2Eg/1W
      R0kIw4gQ9rXwhU8+wPL5M62Oo1yE2+ngY/ffyi3XqMb/SqkCoEyYlAaDvQetjpFQQ70HcTvt
      /O3H7+PGNUvU7KA0U1Tg4WP336q6fRJEFQBlwiKhIUKBHqtjJJRhRPAOtWLTdT7z4J3ccf0q
      dLWlZFqoKC3i0++/QzX+CaR+s5UJkVLiHWq1OkZSjAw0n/3zR959C5963+3YbWrldCvVVpby
      pYfey8qFs6yOklXUb7UyIdKM4/eesjpGUgT93RjxMDb76FpB669aQlG+h/995Gn6BkcsTpdb
      NE1jydzp/PkH7lJ3+CaBugJQJiQa9RGLeK2OkTRBfzfn7pa6fEEj3/jrjzB72mQ1LpAimqax
      YkEjX/j4/arxTxJVAJRxOzP3f5zPIhqJEIqM3iksTQOvP8y5O/RKKenseHNGkTQNguEYcf8w
      XYMXXlJaSpPBIT+JXnPUP/L2q5uy4kL++XMf5IHb1mFXi40lldvl5IN3r+evPnKvWtgtiVQB
      UCZATmjq57M/eZS//M7zSCS9b+zgzg/+N0EpCQZC+PxhpBnnkUc24vMFCUXiGNFhXtpzAn9b
      E09v7UEaBl5v4GwRAYj0Hef97/lXDg0bSGkSDIbxeoPEDJNoNIrfH8QfHP/ew5Hwhbt67DYb
      979zHX/7sfuoKCka9+sql9dQW8kXP3E/d9+4Bodd9VInk/rXVcZNSpPoRRrISzwL7G6KjGG6
      IyYbXzzBtavrGD51jG/+z4sUagbX3v8uwj0n+N7Dz9DeGeOf//YqejuDUCTQBWx+5hm2HI8w
      4jX42pfuw4bklRf28ukv3cILzx1k9h3FfPyzj7J8Tgmyfj4VQ00c9efj6+zmc1/+FPWesXfd
      REIDo5m58HOWL2hk6uRqfvaHDbyy+w0MI/32Pcg0LqeDa1fM58E711OYn2d1nJygrgCUcZPS
      JBYLTuSZ3HxtHc8938zJuIeGfMHWTXu59U8f5It/dwdbX91P3qSZ/NWn7uGqBjjujxMMGKNP
      NU22bj9KdUkekaE2ToQB0+DlrScIDEXYvnU/0oizZu0aPvu5D+A9fJhoxM3n/+JePrZuCq8f
      GR532lj00pvHlxUX8hcfvofPfvBuKsuKJ/DvoQBoQtBQW8lfffgePvnA7arxTyFVAJRxk2Yc
      04iM81kCEJTPW8LhZ3/H1PlzwYDa6nxONrdz6kgbLk8hMhZjZMTHsZNeyuzAmVECIcjzuFmw
      ajHve/fNlNsgMtQKNbOZPa2BFaUhDo0Y+MNhBtpPEPEUgWkw4Auw+3gX9dX54/4+47HQmB53
      7YoF/Mfff5K71l+F02Ef93FyWZ7byfvuuJ6v/9WHWbFwFpqmBthTSf/yl7/8ZatDKJklFgsw
      PIEdvxxOJxXVlUyqzGfp6rkUexzMu2oRHTt30NQF779/LXnSx4uvNrPiluuYXVOIy+OhprII
      T1ExVy+bwsZNuxiJu1g8fxKhPi9Tly5g/swqZk8pxRsM8dyze/GFDe5/zw0cP7CPN1r6qZi9
      kBsXVI07b37RZJyusZ3Z2202lsydzvL5M+kf8tI7MPyWWUTKW7ldTm5YvYjPPHgnqxfPwa76
      +i0hpPotVcYpHByg9cgTVsd4GzPcw/PbfLxj3QyQkk0vvM6am9fgmuDr1TRcQ1HpxJaI3tnU
      zC+feJHWjl5MU40PnGGz6axaOIu7bljJjPqa07uxCRAaCE1NsU0xVQAsJKUE0xjdON00QcrR
      D+TpvzNAP9OlIEb3MRQCtNE3C5puyRsmXQtAolXXr6W4bOKLwsXicXY2HeW3z2yhraMHI4cL
      gU2DhVNLuHtZGXNKAmjhAWQ8AEYEhA3hLgNPDaJ0NqKkEWxuhKauCpJNFYAUkFKCEQcjjvQP
      YQ60I3vbMId6kCN9yMAw0j8EkSAyHID4BaYt2hzgzEO48xF5hYj8EkRRBVpxNaK0Gq1uDsLl
      AV0H3YYQyRveCQcHaT3yeNJe/2KklEgpEZp2kbk5iTVp6vUUFDck5LV2NjXzx41baT7RTiQa
      S8hrpj9Jns1kZW2E9fVeGvO60MUYmhuhI2pWoU29HUpnqUKQRKoAJMHZBj8SxOhsxmjeidnZ
      jNndCqFk3T0rwJ2PVlmPVjcbvW422pSFiLwCsNkTWhDisRDHmh5J2OtdSiw8wo9+tI0PP3QT
      A81H+OkTu2lctpx3Xd+Y9CIwecYteApqEvqa3f1D/HHDa7y84wDhcBQzC99+miaoLiti9eQ4
      6/J3M8kdACb2fYrqVWjzPgyeatU9lASqtCaINA2IBDG7WzBa9mG07MFse2O0Gyc1CSDkw2x7
      A7PtDUZvlRKIynr0xlXoM5agT1kANgdCu7I7K4WmI4SOlMn93qRp8NhPnmBnS4wHTIMf//pl
      Pv75j/Lwv/+QrrWN1DqSevizawElUnV5CZ944J185N23sHlHE8+/sovWjp6MvyoQQpDncjJn
      ej3XLpnOUu11XD2vgbyyPaJl9zaMoWa0BR+D2quSemWbi1QBuAJSSojHMDuOEN/5NMbxPciR
      PqtjnUMie9uI97YRf+U3kFeIPmsVtvnr0GcsHS0GEzirEkLD7iwgGh7/3Poxk5Kuw/tollNY
      Na0LaUicJbWUuzVm1pbSMhiltjp5FUAIHbtj/FNHx8pus7H+qsWsv2oxPf1DbNt/hFd3vcGJ
      9h5i8RiZcGEghCDP7WRmQy3XLl/AgllTKXeGMHZ9C4aaL/8CYxUZwtz1bYT/PrSZ777iExjl
      TaoATIA0DeRAJ/GmzcT3v4jsaWWil7gpFfRi7HkBY88LiMoGbHPXYltyM6KsdlxvKiE0nK7i
      pBYAKU2eeu51hgNFNB08Sqx2BiG/D8MEXyzKjKLknv47XEUIkZqGpqq8hDtvWM2dN6ymp3+I
      3QeP0Xyig6ajrQx7/cQNIy0KghACm65TWVbErKl1LGicypJ5Myg+vVCbDPRgbP8GeE8k/uAy
      jjz8a8yoD23+R9SVQIKoMYBxkEYc2dtGdPMjGIdeg+jYbhRKaw4XeuNKbAuvR5+1GmEfW8Pa
      37WP/u49SQ4HSJOHf/wE9374Tl77zW/Z0qET8Zl87R/fk9S7GAtKplLbcG1C+51H32rm6Awv
      aUI8ArEAxAJIMzr653NOJOJxg1P9QZrbhzjRF2ZPcwcj/hCmBMMEmcRRECEEuiZwOh1UlRbT
      UFfFwsapzJxSS01lGbr21n99GQ9jvP4VGEzyDnHChrbwE4iGm9SYQAKoAjAG0ohjth8m9tKv
      MJq3j755s5Comop93QPY5l+LsF26EAS8nZw6/nyKko2SUhLwBXEVepJ+6Vo1+SpKyie++cjZ
      xt6MQ6AHGexFDjeDrwMZ7ofQ6Y/xsLnxRm10+zXafTZ6wx46I4UMa7V09I0QjkkkjA4sS87e
      iHbuW/xMozk6o1ic/fC4XVSUFlFZVkxNRSl11eWUlxQxuaacAs+ll2aQUmK+8WPk8cdJyZWw
      7kJf8xVE6ezkHyvLqQJwCdI0ME8dyvqG/3yiaiqOWz6KPnM5Qr9wU2saMVoOPUY8FkhxuuQT
      QmfG/PvQbc5xPU9KE8wYBHowO18FXzty6AiEkjwuJGzgqSLsnkrQXY8/bzZRvZBgZHSQPhiO
      cKYPye1yIoTA7XKQ53KS53ZSmO+5oiUszP4DmFv/BYwLL9mdFMUz0K/+GkIf389IeStVAC5A
      ShPZ00b05V9hHHh59CwuB2kzluK87SFE5RTE+Zf80qTr5Kt4B49blC553J5K6mfeOqYuBilN
      iAWRQ4eRp15G9u+HSBIHx8dC2KCkEVE2G61mDRQ2gGZPSpeJNKKYO/4N2bMj4a99SUJHW/xp
      tPr1qT1ullEF4BxSSogEiW35DbHXfg+Riax4mWU0HduKd2Jf/0G0/JK3fMmKbqBUuFz3j5Ry
      dHqj9yTmscfSo9G/lPxJaFNvQ9SuBUdhQmfRmAMHMV//8ugdvalW2IB+7TcRepLnA2cxVQBO
      k6aBeWw3kSe/i+zPzr1ur4QorsRx52fRG1ecbUBMM87Jo89OaHOYdCU0GzPmveeC3T+j036D
      yPbNmCc3wPAxCxJeAWEbvcN2xrugaFpC1t4xDvwA2WLRsiC6E+2qL6OVzbXm+FlAFQBAhgNE
      n/0e8Z3PpPDGrQwkBPqiG3He9klE/ugqmSODx+lq22JxsMQpq1pIec2StzSMUkqIBTDbnkWe
      eDb5ffopICqXIKbehqhYPOHuIWlEMV76HPg7kpBwbMSMe9Dn/Yllx890OV0ApJTI3lbCv/6X
      03P5lbEQZXU43vkQ+qyVSGnS1vwUkdCQ1bGumNBsTJ9779k7gM+e8Z/ciHn00fTu5pmognq0
      OQ8iqpaNe82d0cHffwJj/FtuJkzhVPTr/o+aEjpBOVsApGkS3/kM0Wf/F8LZN5Ml6TQd+w0f
      wL7uvfh97XSceMnqRFesvGYJZVULEUIg4yFk2wuYxx/PijP+yxHVK9Aa74fi6WO+ycps24C5
      97vA22fHnWlWkt4wOwrRb/guwlmY3ONkqZy8E1hGQ0Sf/h/V5XMlTIPYhp9gdjTjeddfkFdQ
      S9DXaXWqCXO4iimpmANI5PAJjAPfg8FDVsdKGdm9A6NnD2LKzWiN94Gz+LKNtwz1c6HG3zfo
      579eaMdr2vj4HVNoyB9fM7PvaC/28mJKTYPSYhcO/RI5zBiEB0EVgAnJuQJgDnYRffw7GM0p
      nraWpYxDrxEZ7qHy3r/kZHBgAltFWk8InapJK9HMGGbTj5AnN4w2LLlGxpEnnsbofA1t/p9C
      7ZpLdwtdpEvskRdaWLJyOovzQWqCbXs6eL45xP23NFAjo/x4Uwd10yuoz4O50+aM26oAACAA
      SURBVIo5cnyY6kI73ZE4B06GmDfJBQM+PvmzI6xZXsPy+nyuXlRO76lh/J58Zpedc8+CNJAx
      X0qWB89GObOghpQSs7eN8MNfUo1/gpldxzF/8iWq9HKro0xIaeU88swwxoufRbY+k5uN/7ki
      w5i7voW55zvIWGDcW1vetKqWn/7qIN/fOoA94OUnu4K8d3Uh333iJN96tJnGBVXMLLWzcWcP
      3phk0+4e2tqH+IsfHqKurpBjRweIOp0smFzAzUurOHmsmw2tIX6xqQPputAUVtX8T1ROFAAp
      JWbrAcK/+Ec12Jsk0j+E7Xf/SdFIiLRYuWyM8j2VlIXaMbZ8Pif6+sdDtm/G2PJ3MNR84SJw
      kS6iusmlPPyF5cwXAX62e5hTvSP86JV+ZtY7GTGcLKsvZF6dB/3sshQC0xDcd9dcbpjmwSYE
      DoeNsgIHlaUubltby5ObTjBsdzPHc16TJXSEbaKbfipZXwCklJjHdhH51T8h+9T8/qSKBCl4
      6UnyOtozogjkuYupHNqH2fRDddZ/Mb6TGK98EXniaeR5/0Yiv+6CT3ni+aP8zcOHebYlzOLp
      pTSW6ghN4PPDVZN0vvKLg/zncx2EwyG+/ZtDPN8WxqaLs339mi7QhMBuRvn+U20UVxSR5/Uz
      d0Hl2w8mdHCo/v+JyupZQFJKzOO7Cf/ynyDstzpOzpAOF4PLVhOcVHfRs0RLSYnTCFDT+zq2
      uPq9GCtRvx5twccQttFpsmbPTsztX7/gUinxuInQxehZvikJxEzyHDpCQCRmYLdpYEqipsRp
      1y/ciWNKgjFJT+cQ//hUF//xyfmUnj8kkVeFvv67CG3iaxnlsqy9AjjT7RP5zTdU459iIhqm
      dNfW0SuBdCMlnugAk/q3qcZ/nOTJjRjbv46M+Uf3ZvbUgn7h7hebTTvbxYMm8Dj1s+cCTruO
      JgSaruG6WON/+nl5ToE7z8W//smstzf+gCiYrBr/K5C9BaC/ncgjX0X6B62OkpNENEzZ7u2U
      UUw6DdIVGX6qel5FiyZrb+Ys17cPY8sXINAFnhoorE/yAQXVVR5qCi7UyAtE5ZIkHz+7ZWUB
      MIe6Rwd8vdmzRk1GigTJe/ph6jwzsDsKLI2iaTaqbYKK7pfRLjB3XRkH30mMrV+BQBda7dVY
      VuDdZaML3CkTlnUFQEbDRH77DWRvm9VRFIDAMNpTP2BK/XUUlzWS+sZCUFA8hYbCcvJbfq8G
      exMl0I2x9SuI4hngrrAkgqhcinCVXP6BykVl1SCwjEWI/uFbxPdutDqKch5t2mJcH/l3opER
      +rr24B85RbJ3j3K6SqioXUpesBNz+9eSeqyc5alGVC4bvX8ilRsmuUrR134VkV+bumNmoawp
      AFJK4tufJPrE/1XLO6Qlgf3a+7Df8jEAouFhBnr24xs5hUzghjuaZiOvoIbiskY8hXXI7u2Y
      O/9dnfknk7t89D0XSdWCgAIx+33os+5L0fGyV9YUAKP1AOEffR7iFq5MqFyapuP8k69hm7n8
      7F+ZZhzfUCsBXwcBbyeGEWV8VwYCTbPh9lSQX1RPflEddkf+6I1L3jaMV74AcbWxT9LZ3BAP
      k5I9gcsXoq/64tnpqMrEZUUBkCE/oe99DtlzwuooymWI/FJcf/Y/aAVlb/uaacaJhIYIBfuJ
      R/1EwiOYRhTDiCKlAQh03YHN5sbuzMfhLMTpLsXpLkE/Z1coKSWE+jFe+bvxb7yuTJzuAjOa
      3K6gwgb0Vf+AyLNm3CHbZHwBkFIS/cO3ie982uooyhjpjStx/snXkrZUsIyHMV7/ck6t5pk2
      8iohPDxaCBKtoB59xd8gCpI99TR3ZPwsIKN5O/E9L1gdQxkH4+gO4tseT8prSykxD/9CNf5W
      iXgR024HW14CX1RA2Tz0Nf8E+ZNHN3I670OZmIxeDlqG/ESf/C4YaoAvo0hJbNPD6LNWoZVU
      J/BlJbJ7O/J4coqLMgZGGNn1Gtryv0Ee/yOybx9XMi4gbW5k/a34ytcx3NJC0DdMNBJGmgaa
      bsPpysNTWEJJeTUFxeUI7cr3Oc4lGdsFJKUk9sKPib38y4xYeEx5O33h9Tjv//uEvGHP9vtv
      /iuIjCQgnXIlxOTr0RZ9enQW1tHfwkgr4ykEUrMTK55POzNpH4gQj12+S8np9lBT30j9jHk4
      3R5VCMYgYwuA2X2C0H9/GmKZtwGJcpqm4/zQ17HNWHbFLyWlibHj36Dr9QQEUxJBW/JZxOTr
      R7fY9LZidryK7N8Pw8cvuIAcmh2Kp2GWLuBUsIi29j7iE5jVp9vsNMxcwJRZi9FtE9vwPldk
      ZAGQUhJ5+B8wDqs3e6bTambg+sz/XNGbVEqJPPUS5p7/SGAy5Yq5y9Gv/sbbZuxIMwaB7jev
      1DQb2D3gqSXg99K040W8g71XfPiC4jLmr7iB/KJSVQQuIiMHgc3mHRhH1a5e2cDsPk5817NX
      9iJGGPPgjxMTSEmcUD9m8yPI827MFJp9dBXP8vmjH6WzIb+O4cFedr38REIafwDf8AC7Nj/B
      UF+nGii+iIwrADIeJfryL8FI3N2jioWkJPbiz5ET7MobnfXzK9Xvn6bkyRdh8PAlG2ApJd6h
      fva99jyRcGJv2otGwux7/XlGBntVEbiAjCsARvMOzJNqil82kUM9xHc9N/7nSQmBLuQJdQ9I
      2pJxjEMPgxG+6EOikRBNOzYRjYSSEiEWjXBg28aEF5dskFEFQMajxLf+8cIDSEoGk8Q2P4Ic
      w0yP859nqO0c09/gIWTf/guegUspObp/GwFvctcRCgW8HNn7mroKOE9GFQCz4yjGif1Wx1CS
      QA73EN+/aeyPlxI5fAx6diYxlZIoZvNvIf72M/zB3g6624+nJENfZyv93Wpf8HNlTAGQUhJ7
      +Vfqpq+sJYm/9odxnKFJzCOPJDWRkkDDR5G9u97y85VS0ta8HzNF43mmadB6ZK+6CjhH5hSA
      wU6M47utjqEkkdlzArOj+bKPG13p86Q6+88w5rE/vuUqwDc8wPBAd0ozeAd78Q71pfSY6Sxj
      CkB89/Pqpq9sZxrEXvntGB4oMY/9PulxlAQbPoocPHz204GeU2O6wzeRDCNOX6faLfCMjCgA
      Mh4lvnv8s0SUzGMcfAUZ9l/6QVEfslvdB5KJZOszSDOGlJLB3g5LMgz2dahuoNMyogCYJw8i
      /anabUixVDxO/I1XLvplKSVm67Nqk5cMJfv2j94gZhoEfMOWZAj4hjHVroFAhhSA+L5N6sav
      nCExDrx0iS+byO7tKUujJJgRxmx7gUgoiBG35j1tGgaRYMCSY6ebtC8AMh7FaFZv+FxiHN97
      8Su+keMwfCy1gZSEkj27McIj1nXDSElczSYEMqAAGC37kL5Bq2MoqWTEiR/Z9ra/llJidly8
      e0jJEN4T4G+3NoMaAgAyoACYx3eD6q/LMRLj0GsX+GtDDf5mCdG3y7oVOoXAZrNbc+w0k/YF
      IL7/JasjKBYwmrcjz18LfqQFAp3WBFISyulrRpfWTOvWdB1nnseSY6ebtC4A5kAHMmDNTAHF
      YqaJ2f7mTWFSSszePRYGUhJJ+NrwOK25AvAUFKNpuiXHTjdpXQCMln0QV4M1Ock0MI7vevNz
      aSJ791qXR0m4MkdyVv+8nNKKSWqDmNPSugDI/lOo0ZrcZZ46Z9lvIwLeVsuyKIlXTE/K++I1
      3UZFbUNKj5nO0roAGKfUuv+5zOw9Z+VGf7u6+SvL5GtBiooKUnrMotJKCksqLv/AHJG2BUCG
      A5idR62OoVhI+voxh3tV/3+28p6goaEBTbel5HCapjNl1iLV/XOO9C0AI31gmlbHUKxkmpjd
      LYAEn8XzxpWkKHVGqK6blpJjVdQ2UF5dn5JjZYq0LQBG51G19n+ukyZmx5HRAWCfWsExG0l/
      BzMXrMJTUJzU47g9hcxavFad/Z8nbQuA7G8HtWJfzpO+QTCi4Ffz/7OSvxOHy838lTfgcLqT
      cgi7w8mCVTfgdOUl5fUzWfoWAL9a/kEBs+8UhIfUvr9ZSob6wIhQWFLBoqtuTngj7XC6WHjV
      zRSVVqmz/wtI2wJgDvVYHUFJA9I/iLR63RgleSJDYEQRQlBcXs2ya29P2CydguIyll17B6UV
      tQghiMUN/MEwI77g2Y9gOLc3mUrN8PtEpPsCcGacX+/p4FjA5F2L65hXmLz5zJFIjB/t7+Oh
      FbWEozF+vqeDIQMaa0u5a0rhRZ4l2ds6RH5lMTPy0rbOX5Yc6h5tJLLYU5ta2D8Qp7SmiD9d
      U4lNy6Ez1fDw2as7IQSewhKWr7uDtqP7aTuyn/j5y4GMgabbKK6ZgSiq49WDHfQPH2bEH8Ib
      CL3triIBCAH5bhfFBXlMqiyhtDCf2soSKopTO0XVCmlbAMw07ALad7KPjZ0R3rO4hm372oiW
      lvPp2S7iNo3Nzd3sHjF4/+IaBvtH2Nrpx+Z2EQmFqCwvZm6+YFenlxFpo0DGiDrc3DerFKcm
      2H+qnxc7AqyZUUWliLG724dPc/LgnFJae0Z4tHmQV/oNHloBwUiUAeHgoSWl/MOm4yyqnkEo
      CNMKdJqHoxTJKL877mVdYyVlbh2Q7GgboKkvQFFJMXdO8fB4UyfDNjd/MqeUzc09NPlN7plb
      RfPJPpr8JvfOr6HWlSZFQ0rkiDU7R6XKH3YM8Y3PLMJj1zh6coT6ukIGOn04y13sbxqi6ZSP
      lcsmsWZKHllXGowwxMNnPxVCYLM7mDZnGZOmzObksSbaWw6OaetIQ9gZiLkZjhfiPexFyoOX
      fY48/Z+RQIiRQIi27oGzOTwuB7Om1DBtUiWN9dUT/Q7TWloWABkOQDS9Ls1iQR8/aA7yuYX5
      /L8dXbjDBp9aVECJS6Ozs48/9Mb50GSdr27rYobpZeqUSWze08ZtK6fyfFMPHYVgLyoh3NuL
      u7aKrpP99NYXMdljQ9Ns3DS1iO/ubmdFqYbf7iEyOMDe2jx+tKObjy6v4Y2h3tEgQrCnpZcv
      9Qwy5MjHFQzwzClJ9XQXT7UM4e0f4Z5VU5CmyamuIUZwsuVQN+9a0sATezopi7hocxQyOzTI
      T47qbD0e4K+XVdDnD/GL434+v6ySUMyEdCoAAyesTpFckQiPvNxOeUU+/S393FVVwN4DvRQv
      K+e/N/Xw9Q9N4b+e72BFw0wcWVcBQMYCbytsQghcefnMXLCKaXOWMjzQw8hgD0HfCNFIGNM0
      0HUb6HZaev30BzUGw2fWDbjy6eNSSvyhCLsOtbL7UCvFBR4WzpzMopmTKfAkZ7DaCmnyLj9P
      PEa6LQERi0RpG/Ly/aYBJhXbsWHiN0Z/0Y4PhFlQV8Ki+jLy4jEMm5MlZR6qSjzMLcujzCkw
      pM7q2nyq890srvBQnqePfosyzq+aOnmkeYhQ1CBsaKxrKKLcaWMkEqJ2UimNhS7cZ9aukpJl
      M6r411tmMU2GaTFAFwAC3abz/oVV/HJ7G5s6goBASsh357G60k25y8aB3iA7jvfyYr9Bg9vO
      OyY5+LdtpxgydG6b5ORft56iPZhGu69JiQxl+YKAus78qYXMqnGja6NvSh0BUrJwaikzq/Mo
      0LOw5T/jEl18Z64IyqsnM23OMuavvIGl19zK/NW3MOxq4MWWGEcGdQbCAjnaoZPweBIY8gV4
      efdhvveHl9i44yC+gDXrGCVael4BxKPp1v7jzs+nIU+nwGkjGpXcM6ecf9x4lMYCG4sbSti+
      r43WI4LaSdW4fKO/0LbTsw40RvsZJaCJ0Q8hBEIAUhKMmZRLk+G4RIg3f5GL3R46Th7jP7xe
      msOn/0EEHGjr5z+CQU7FBVUOG99vOUVrlyBaWMSuLj+VHhe93jCiEOwanF33UMC1M0rZt2eQ
      UpeOSZwDg1Gm5escH/LTPhhlWoFOeyCNCgASGRxGOKzOkTzOPAfLpxfjcWi05Em+9ftjHDnQ
      x98tKTt9ipbFjT+M+b0uhCASjbHv6Em2NbXgtaARDkdjbD1wjH3Nbaxd1MiyOVOw6Zm7sqiQ
      lu3LdnFmTyuh734y7VYCjRsG3qhJgdOGTUA4bhIzJR6HTixm4ItLSt02kKONvHnO/+F0ETjv
      a0JAJGoQMsDj0NBOFwYpR78WN0wCMfA4BA5dQ0pJzJCjxUQT2AT4w3HQNdy20a/7InEKXfaz
      bYcpwSYgLkevFsLROFE08h0akZhByIRipz76ZwNKXDpaukyZE2BfUIbmTq8uwUSKGya6JhBC
      YJqSQW+UfI8dh01gmqDrYBicfozVaRNPW/LnaPXrL/kYKSXdAyM8t/UAHb3pMymgsrSQO69Z
      QlVZkdVRJiRNC8AJQt99KO0KgGIN+ywXWnFaXqwqCaAt/jO0hhsv+nXTNNlzpI0N2w8SN9Jv
      d0CbrnPjyrksmzPV6ijjpt5VSnoTgNMDZO8VgHJx0VicjTsOsudwa7r1Cp8VNwye23qArv4R
      blo1D6cjc7abTM9B4BwWjBmYpy/KYnEDX3x0oFlKiS+cTn3zipJchmGyacdBdqdx43+GlLDv
      6El+t3EHkWjm9Fyk5xWA00Pu1SaT//fSMTrQETGTP19eyd+/0kGBlNy2dAqvNrUSdzgICSff
      vL4+h/51BMKRR/ZeAZh8/5FDfHN7iN1fX8r2Xad44WiQEycGWHv7Yj6zLJ9v/2gn7XlVfPOB
      ydn5c7fnv+2vDMNkw/Y32H0ksxYBbO3q59fPb+U9N64kz+W0Os5lpeXvk3DlkZWjXZck+MQ1
      M/jntZMpdwn2tw5x5/IZfGFdPc8d7SbiKeJfrp/OND3Kscw5wbhyQkBBpdUpkkjw7ltnsq5a
      QwLXra7nqx+YRWVRPvfPy+PI/lOMVBRTkLkTTS7P/tYN2s80/rsOt5KGQ5SX1d47xO9f3JUR
      VwJpWQBwenKyAHh9Qf7y2WZmTa3BDuQ5NGyahl23M10L8rGnDvPcKa/VQVNMQ3iyeQcnQUmh
      4+ytS0IIju3roHR2DWValC8+3cPtjR4GRyIE45nXGI7JeQVg+8EWdh/JzMb/jLaufh57aVda
      DlqfKy0LgBAC4fJc/oFZxeQ/Xz3Jg1fP5OZaN6UenX3dfjr6R6godPPA8ml8+4ap1JV4qE7P
      jrvkEAJRPMnqFEkn5JkSIPnBln4+uq4cM2Zy4/xSth4e5njHCG3e9G5MJkToCMebXUCHWzvZ
      sucIppm5jf8Zx9t7eWlnem9rm7ZNiSipRnr7rY6RUrMrPTzf1MFWl5OPLq5hx842/jBk56EV
      VWw43MHr/THet6yewly6OHLnIwrr0n4QcMKMCP/n921U1eTxrSdP8tc3V7BibT3VLg1d5PHQ
      7dMgHmb2tDBzS9P27TpxjgLQRr+vgRE/G7a9QSyeHYVOAjsPnaCuqpTZU2qtjnNBaXkfAED4
      F1/GeGOL1TEsdeZHI4RAytM3f+VY15hWNwvnA5/F3PJ5q6MoyVA8A33NP2Fqbh7dtIOjp7Jv
      GfhCj4sP3X5NWq4hlJZdQABaxWSrI1hudLkIcfbPudb4w+iVoMjP/i6gXCWcJaA52H/0JMc7
      eq2OkxTeQJiNOy6/MqkV0rYAiIJSqyMoaUArrgabC1xlVkdRksFThS8c57UDx7Ki3/9iDrd2
      cfL0UtPpJG0LgFbZcLZvUMlVAlFRBwjIy+aZQLlLuCvYcbCFYV/Q6ihJZZgmm3am31VA2hYA
      UTppdBUsJXdpGlptIwgNUTzT6jRKEow4p3HgaG5s+dnZN8zh1k6rY7xF+haA4kqwu6yOoVjJ
      7kQrGd3MWxRNsTqNkmh2D/tO+gjkyL68Ukq2HjhudYy3SN8CIAR63SyrYygW0sonI9yj+7KK
      svkWp1ESLeyoYn9r+vWLJ1P3wAg9AyNWxzgrbQsAgN64wuoIioW0aYve/MRdrgaCs8yJUDmB
      aG7NbDNMk31HT1od46y0LgBa7UzQ1UBwbhJo1dPP+VRDVCy0Lo6ScMf8RWdXvs0lR9q602aJ
      iPQuAPXzTq8MquQcXUefvuTsp0JoiOqVFgZSEilAPicjuTmzyx8K0zOQHmt6pXUBEJqmxgFy
      lFY97W33goiq5WpqcJboiFcTNNN/ueRkME3JGy0dVscA0rwAAOhz1pD1m2Irb6PPXHH2Luiz
      NB1KZlsTSEmobtGAmf7NT9J0DwxbHQHIiAJwFdgdVsdQUknT0WevvtAX0CatTXkcJcEcRXRi
      zf65Uf8I4Zh5+QcmWc/ASFqMA6R9AdAKy9Emz7E6hpJCorAMbfLbz/SFEIjJ68GWfotqKWMX
      KZzNYCTxN3mGvJ28uuVVANpee5zmjiGadrwOQN+RHbR1DNOxZwMnegMc3vsyvlCIpj27AOhv
      3kFre+rOyuOmmRbjABnRoWpbcB3Rln2QvYsCK+ewLboRIS5ybqI7ENWrkO0vpTSTkiBCJ1y+
      knhrEva3liaxaBQAMx5joG0/u557jFPt7SyZPwm/L0ze6FfxD3rpObyFFx/fQHdHL8vnFuEb
      8bN7/2O0D4fIr17CtIJhdja1kF/RyDtuvzGxUaVkxB9kUmVJQl93vNL+CgBUN1BO0fTRn/dF
      CCEQ9TekMJCSUPl1+FzTU7Lmf9GkOcxeuJpb7rwHh+knFDqzRaMkOOSjunEVsxev5YbbboF4
      AN9QPwcPdVJVVUdn0zbCAS+2gnJmLUr8TYhSwqA3kPDXHa+MKABaYTn61EWXf6CS8URF/QW7
      f97ymLJ5UGRNH7JyZcTk64jiwpSJ74cXwsZIdxeGEaW9s4f8fAcyHsW84JpiEiEERjx6thEU
      QsPpdjFl7iLWvuMdVM+/hnXXLGfXU78hCdcrhNNgz+CMKAAAtlV3jM4CUbKXENivfs/Fu3/O
      Pk5Hm35XajIpieMoQqtbRygaS8rSz878cubOKOP53/wE25SVTC4tYPrMWl5+/A+YhQ1UVxRQ
      NKmR8kIXkxrn4HC6mVRhZ+MzG7CV1FNXX8fqa5ax95WN9A378XUfZ9vLm5m87BqS0fKEI9YX
      gLTdEex80jQJffuDyMEuq6MoyeLMI++vf47wFF32odKIYmz4BIQHUxBMSQQx4260uR9k/7EO
      ntyyNynHkFIipRy9cVC8dVe9iz3+3K9LKUf7ZzRt9P9Sjt6FnoSZ6POmTeLu65Yl/oXHIWOu
      AISmYVt2K+qegOxlW37rmBp/ADQ72vQ7kxtISRxHEdrkGxAiuVfxQgg07c0G+9xd9S72+HO/
      LoRAaBri3D9ncZOTMQUAwLbsFkSBtaPmSpI487CvffeYHy6EQEy9DVxq57hMIOqugdNbe+qX
      6+LLEU6H9ZMwM+onoRWWY1t+G+oqIPvos1ajFVeO70maA23OB5ITSEkcRxHa1HciTi/jYbfr
      aFrq38OxQC/bXniC1zc+Q2//CCf2bWHz07/lwBuHU54FwJYGG15lVAEAsK28Q10FZBuHG8d1
      7x3304QQo2eWJY1JCKUkiphxF3hqzn7udjrQtdQ3PUMtu4gXzmDe8tWUFLnJK61j2TXrad/9
      FP3RlMehKN/6GxozrgBoReXYlquxgGxim38tWvW0iT1Z2NBmvy+xgZTEKZqOVn/TW/rZPW4n
      Nj31TU8kGKNtzwu8suE5AlFwST8bfvNDhuVkSu0pj4PTbsFBz5NxBQDAvubet60UqWQoZx72
      Gz804acLIRAVixD16xOXSUkMoaPNfgAcBW/560KPG5st9d0fk5bfxr0f+hhLZxfRtOsNCmpn
      ccM9H6DM6KTLl9opmbomqCob44SHJMrIAiA8RdjXvZesHp7PEfa1946/7/88Qmhos9//toZG
      sZaovwFRufRts3DsNp2i/LwUpzFp2f4CWzY+y46tb1BUnsfGR39O085t+EyNvBQPyNpselp0
      AVk/DD1BtlV3EN+/CfPkQaujKBMkyiZhX313Yl7MVYq2+DOY27+emNdTroynFq3xPWcHfs83
      rbaC9p5U3sOhMXXFeip9I2i2m8jLz2NmQw2hUIhFa28hz5Xak8myonzcTuuXt8nYAiB0G453
      fJzwj/4G4tbfUaeMk9Bw3PyniPzis38lpSQSGcTvO4V35BjBQBfRqBfTjBGPB7HZ8nA4inA6
      iykomkZ+/mQKi0bHDoQQULUCUb8eeXKjVd+VAqNdP/M+BO6LX9lVlxejaxqGmbqlmXWbg8KS
      N3chc3kKcXkKU3b8c02tTY/d0DK2AABoDfOxrbqL+KuPolYKzSz6gnXo864GwDCi9HZvpa93
      ByPDxzDNGFJeerGwrs7NaJoDu91DZfUqautuwO2uQJv3YYzBw+BPjx2XcpGYdjuiatklb8Cq
      LS/G5bQTCEVSmCw9aEJQX1VmdQwgwwuAEALHde/FaN6G7DtldRxlrDzFOG75GKaM033qJU61
      PUs4PAiM72zQNKNEIlFOtT1LZ/tLFJfMZur0e/As/xuMV74A8VBy8isXV74QbdZ9F+36OcPj
      dlJXWcKRtu4UBUsfbqedmvLiyz8wBTJyEPhcwlOM8+6/BJv1/WnKGGg6zts/zbDZz+4dX+Xo
      kV8QDvcz3sb/fIYRZqB/L3t2fpXWvj2YjfclJq8ydgX16Is/jbDnj+nh86bVoeXgRI550+tw
      u9Kjvcr4AgCgTVlwehmB3PtlyjRiwdWcdPfTtO87BPynSHTXnWFEaGt9gv0DewnXrUvoayuX
      YMtDW/BRyKsa81Pqq8vIz3MlMVT60TTBnKm1Vsc4KysKgBAC+/oPos9cbnUU5RJkdQMtU5yc
      PPkcppncgXu//xT7vMfwutOjrzWrCR1tyZ8jyhdest//fB63k0UzJycxWPqpLS+htiJ9VjLI
      igIAIGx2HPf+DaKw3OooygUYNp2WxkL6fYe50u6esYoZIQ7qNgZ16++4zFpCR8z7EKJ65bga
      /zMWzqwnL026Q5JNCMGq+dPTqtsrawoAgFZYhvO+L4DLY3UU5RyGJmhtLGbQNpLyY8fNKM1O
      DyG1amjinW78tam3ISa4WVNxQR4Lc+QqYFJFCY31Y+8iS4WsKgAA2tRFIBoYwAAAIABJREFU
      OG//DFxmFoKSGhLom17FYFWq7/w8TQjiQuOwqxCjcIo1GbLRWxr/K3uvrZw3nZLC7D5p04Rg
      zcIZaBYsgncp6ZUmAYQQ6ItvxH7LR0GtO24tIQjOX0x7ncPyZTsCMS8txVMRVdbuwJQVEtj4
      AxTkuVgxZ+qEupAyxbzpk5g+Ob3O/iELCwCM7h5mX/MubCtvR80MstDMpXTOKEOmyY+gd/AA
      vhl3IyZdbXWUzGXLQ1v48YQ1/mcsnT2FKTXZOX5X4HGxbunstOr7PyMrCwCcXirinQ9hW3qz
      5WefuUibuQLf+ncy7D1mdZSzpDQ53vIY2pLPIhrfY3WczOMqQ1vxeUTDLQlt/AF0XWP9yrkU
      eaxfIC2R7DadW1YvsGDxu7HJ2gIAIGwOHHd/DtsSVQRSSZ+5Asd7Pk9n9xbSbYkOn/cEI94W
      tNnvQ1v0KbBlV4OTNEXT0FZ+AVGxOGldNVWlRdy4al5a7JSVKEtnT2Hm5GqrY1xUVhcAUEUg
      1fQ5a3De/0V8sT68Iy1Wx7mg9pMbEEJDNNyMvuafz+5Vq1yA0BGTr0e/6iuI4hlJ76dvbKjh
      qgXTs2I8YNqkSq5bNseS7S/HKusLALxZBOzrPwgTnK6mXIbQsK25F+cDXwJ3Pt1dr5KIs38p
      Jf19wSvPd46B/r3E46HRzWRKZqKv/Rpi8vUJPUZWcBSiLfwE2qKHEM7ClDTK2v9v7z6j4zrP
      A4//b5kGYDCD3hsJgCBYwCIWiaQokZIoiZYs25JcIie2V3Kym7a72T1n92xyVnuym022eMvZ
      7MmJNye92rHjOJZjyRIpkaJIsYKdIECA6L3MYDDt3vvuB5AUKRIkygD3Dvj+zuEHAlMeDoH3
      ufctz6MoPNZUz+aG6rROApXFebz0xCZbOp/NhbOjSyFFd+N64mdwv/DLoMktoinl8qA//kXc
      z30TxeXBsgxC4/ee+0/Eovz596e/1/bBZY5cv/+JYGFa/OG3T6c0XCFMhgdP3fq74g2ibvhF
      1Ef+FcjzAgAoRZvRHvtNlKpnUDTPkr63fmM9IF2TQGVxHi/t3uSIev8P8lCNhIqqoW/Zj5pT
      TPy7v4OYHLM7pPTn9uH5wr9Ga9yBciOxJuLjTE3NVOVREA7FiU4lmQzHiSVMvvtHp+gPG1Rv
      qWMtId46P4aeX0BNfIjmIYtLQwZn3rkE62rp/ukJ/JvWo7a3U7yhhB/8VQtmwuTlb27j+D+c
      oad3ime/tJ6ffPcCSaHw5W9upzJ4913fxHgLxaU7bv1dUV0oZbtQctdgXfoTRNeBxfi0nM+b
      h1r3eZTKp1B0++r06JrG3q2NCCE4ebnDtjjmakVZAZ/dvYkM79Imzfl6aO4AblJUFa1+C56v
      /w5qWb3d4aQ1paAS7xv/A23trluDP0wvtN5v+qfnUi9/+TfneOfEAJqmUFadS16+jyNHeoiH
      J1HyC/nK3hzOjnn4pdc3URPQqF7h48xHffSOG1xr7uZia4TKHB8rK/3kuBMcPxums2WYV37+
      UaaaO4jn5lKfDwc/HLpnDJFI773/Tb7c6buB7f8egrUL+nzSiqKhlO1C2/lbKDX7bR38b9I1
      jSceWc3GVVV2h/JAigLrast56YnNaTP4w0OYAG7SSlbi/dpvo297Ua4LzJWioDXtwffGt9DK
      6lA+deAuGh2879Ormir4xtc28ZlHS4hGxnn3/CS7t1fgdwNCp35dCR6XStKwcGmQMAX+yhIG
      mi8SqKrGGurDyAnQdewasYJCdmzMAVPgryqmMteFz6MQzM2gcesKHlt/78bbkcnumf95qgu1
      aBPajv+Iuvpnl/e0kKKhFD2C+uib09tjM4sdNe3idbt4Zvta9u9scuyUilvXeGrrWvbv2ODY
      GGeivfnmm2/aHYRdFLcXre4RlGAh5vULkHz4uhPNmceHe98buJ/+Oor37rrvQlgM9H3EZPj6
      PZ8uhCCeFFSWZmHEDbx5OVhd/ZzviFC9qoCVJT48uX4K/B4YG+XtQ734y3PZsr4QIxalYWsN
      hW5BUX0p1aUejhy+zkgMVjcWk5OhUFUVILcySMfxdlp6wlQ3lJCXdXeCF8Kgsno/ijJz8ldU
      F0peI0rZLtAzINK7fJrMKBoUNKGuewO17nOoWWXzruez2FRVpSg3QE1pAQMjE4SnYnaHdEtJ
      fpAv7NnCqqpix5V5mA1FCOGsjdo2EEIghrpI/Oh3MVtPgvxI7kmt3Yx73+uopbV3XfXfJITF
      lUt/RH/voVm/rrAEAu7aLieEQIi7v37bA7AsgaKpd533fuBzgZ27fxfdNbsDOkJYkJxEdB3E
      6n4fZljkdjxFm67cWfM8Su4qUN2OuuK/n+mLB4Pmlk4+bL5KNJ6wLZYsn4ft62vZUFeFx52+
      S6kyAdxGJGIYze+RPPjniLGHr1XdTBR/Hq7Hv4i+5XkU9/0PTs0nAdhlLgngdsKIIsZaEdf+
      HjF8Lj3uCrx5KFVPoZY8ClnlKGlcIlsIwVh4ilOXOzh7tWtJE4FL11hXW872dbUEszLSJnnO
      RCaATxHCgslxEu//JcaJH0MiDX65F4vLg7b2cdx7fw4lp2jGq/7bCSG4evlP6e1x/i6aXU/+
      HtoCtjgKKwmxcUTfR4iBU4iR87DIjW7mxBNAKWhCKd2Bkrsa3Euzl3+pWJZgfHKKs1c7aens
      Z2gsvGjvlZudyYZVVayqLCboz3T04a65kAlgBsI0sAbaSb73p5iXj4Jl2h3S0lFUtNWP4tr5
      KmrFqjlfLXa0/R0d7T9YWAxCMNg1zKETQwRKc3lqezGRsTBHL0XY+9jCj9a7XH527P7fC36d
      m4SZgPjYjURwETHRBpM9KXv9WVE0CNSg5K2ZXrvIaQB3Vsrr9jiNEIJ4Ikn34Bgtnf1c6xlk
      YnLhF245/kyqSvKoryymvCg37RZ4Z2N5/2QsgKLpaKV1qF/6dazuKyQPf2f5JwJFRa1Zj2vH
      y2i1m1Bc87s6zkhBaQUhBK3XQmzdUcV7f3uGtnV5nPx+C+9fSE0C8HoX1irSMAwmwyHGx0aZ
      ikSITkWIxaKAG8R6hKjD453APXUd19R1/HqcHG8SLyk61axokFEAvkKUnDqUQM30Vb4rEzTv
      srrSfxBFUfB63NRWFLGirJB4MkkkGqete5D+kQmmYglCkSnCU3HiiTvv0DRVxePS8XndBLJ8
      BP2Z5AeyqCkrINPnweNyLZur/XuRCeABFN2NVr0OtXzV8k0ELg/aqm3oG59BW7kRxb2wPeCZ
      mQtveq2oKo/uXsHlMx10hj2U+XSqXmviyn8+uuDXBsgO1s3p8eHQBN2dHfR2d9Hd2cHQYD+G
      YWAkk5imiWXdu82loiioaiaa4sOlCnxuhSI/lBVkUZzjobwwgK4Y0+sIljE9rXTzuZoXVBfo
      3unpHE8QvDkoGUWQUQiaBzR3Wi3kLjZVVfB53Pg8bvKDfoQQmJaFYViY1vQfwzQxTQtd19A1
      DVVR0FQFXdPQNPWh+ixlApil2xOBGO7GOPMuxrn3EWN9doc2b0qgEK1+K/rW51GLalD01Nzi
      en35eDy5xOOj838RIWj+4ALvdGj8i1/diFdVsFQlZd0dArNIACPDQ5xvPkXrlUsMDw0Qi8aw
      5pj4hRCYpsAEEihEEjA8CRf6JtFdcbKyBLV1q2hobKSiqhqP57a7LkWbPmGkqLNaf5HupijT
      A/tyqjCaSnINYJ6EsCA6idHyMea59zE7zkF08RahUsblQa1cg75mJ/q6J8CXlfL930KYXL7w
      Bwz0fzTv17AMk//yG//Iym21eHXYsquS5sOdfP+HLXz21Q08s6eC+UatKDqP7vxvuD13HxIz
      DINL55s5dfwovd1dxKKpLUQ3E13Xyczys7ZpEw2N66ioqkZJw33lUnqRCSAFhJFATI5jXj2B
      eekIZvdlcFKdocwgavEK9NWP3Tr4Nt/5/dmaGL/K6RO/Ne/nCyEIjU0RN6d7umUHvYTHY1hM
      Tw/l5/nmfTeQl7+BdRt+9Y6vhUMTnPr4I841n2JkaGjOV/qp5HK7KSuvZMfuvdSuWp2WB4yk
      9CATQIoJIwGxKayhTszLH2H2tGD1tS3t3YEnE7WwArWiEa1qLVrNevBkLPqgfzvLTHLy+G8S
      mexasvecrbVNv0p+wQZg+or/xNHDfPj+e4QmJnBSAxtd16leUcuuPc9QVbM8auRLziITwCKa
      Pj2aQMSnEOMDWL2tWN2Xscb6EaERRHgU4pF5v77p8hB1e4j5c0gE8ogF8jAKqzByi7FcbnD7
      MEwDl+5CAdyaG6/uwa258Ll8uDU32d4s9EXYJiiEYLD/KJcu/H7KX3sh/Nk1bNry7wCVS+fP
      cuSD9+juvD79f+VQLrebTVu289jjewjmLOO6RNKSkwlgid1MChjJ6b3jUyHE5DhWeASik4jY
      5PT3krfVO1FULLeXqKoybEwx7vEwKpKEXW4sVcXUXViaNqdrV03RUBUVl6aT4fKR7fVTkJlH
      0BsgNyOYkqRgmnHOnPydG9VB7acoOuuafgWXu5L33n6L5pPHMU3D7rBmzZ8d4OnnX2Tdhs1y
      WkhKCZkAHCxpJhmKjNIX7qd7opeYkSBpJhZ1kkJXdXwuLzneAOWBUgqz8vF77i76NhtCCCbG
      r3L29H/Hsuyr23JTYdF2svxP848//B49XZ12hzMvmqaxaeuj7N23H19Gpt3hSGlOJgCHsYTF
      cGSU9rFOekJ9xJJxTGHPguTNaaP8zDyqguWUZRfjdc3tjIAQFp0db9He9reLE+Qsud0FWNYT
      fPDeQeIx51STnK/S8ko++/KXKS6V/Yyl+ZMJwCGiySg9oX6ujV5nZGoMw3LW1IQCeHUvxf5C
      6vJXUJRVMOvnmmaCyxe+zdDgicUL8D4UxUtneznt10YwDWd9rguRleXnC1/+WWpq6+UCsTQv
      MgHYLJqM0jrSztXhdqaSUYSDdqHMRFd1irMKaCiso8RfNKvnJJMRLp77PcZGzy9ydHdSFC+X
      L2TR25NYlmW+3W43L3zhS6zbsFkmAWnOZAKwye0DfyS5NIeNUk1TNAqz8llTtGpWiSCZjHDl
      0h8yPHhyCaIDIbycPaUxOrK8F0xdLhcvvvxlmQSkOZMJYIkZlkHL8DWuDl8jFE+Dk8OzoCka
      Jf4imkoayc3Iue9jTSPG9Y4f0XX9x4hFXNvIyKzizIkEPV2Ti/YeTiKTgDQfMgEsob7wABcH
      W+gLDaTFVM9cuTU3jYX11OXV3HexWAiL8dFLtLV+Z8bWkfOlKDql5c/QfHKCc2fOpvS1nc7r
      8/Hyl3+OuoZGu0OR0oRMAEsgbsS5MNhCy1AbSSc1DFkEChD0BdhU2kRp9szTQkIIDCNCT9d7
      9PUcJB5fWOkMRdHJy19PeeUznDh6mUMH31uWc/4Pkh0I8pWvvUFJWYXdoUhpQCaARTYWneBU
      TzO94QG7Q1lSuqrTWFjPmsJV6NrMh8qEECQTIcbHW+jpepdwqH3WZwYURceXUUhh4VZy89eR
      mVVBy6WLfOcv/nhZ7faZq4qqGr78c6+TmeW3OxTJ4WQCWCSWsGgb6aC5/wLRZPrvO58PBYUi
      fwGPVjxCluf+h5aEEFhWgnhsjEikm/GxK8RjYxhGhGRyulyGpnnRdQ9ebz4ZmSUEc1bj8ebg
      ck0fVBsdGebb/+dbTEUejnn/+9m4ZTsvfP6LaLIMsnQfMgEsAsMyaO67QMtwG8ZyahwzT1nu
      TLZVbL7vlNCnCSEQwkIIA+vGmQhF0VAUFU27u29BMpnkL/7w97nWeiVlcaczRVF49bVv0Liu
      ye5QJAdb3vvjbBBNRjnccYxLgy1y8L9hMhHhUMdHtI10zPo50520NDTNg8uVicuVia577zn4
      CyE4c+IY7W0tKYw6vQkheOsH371R4VSS7k0mgBSaiIX48PpxuiZ6l+Een4VJmEmOdZ3iXP+l
      lL92aGKc937yI+TN7J3CoQkOH3jH1t4GkrPJBJAiE7EQhzs+pu8hW+ydC1OYnO2/mNIkIITg
      wNtvMTU1/7Lay9mJY0fo7XZeTwbJGWQCSIGbg/9o1EFdwBzKElZKk0B/Xw9nT9tTYygdmKbB
      gbffwkgu7+3H0vzIBLBA4fgkH16Xg/9cpCoJWJbFgZ+8hWnKKY77abvaQldnh91hSA4kE8AC
      RBJTfNx1mpEpOfjP1c0kcGWoFWse3biEEAz09XL1ysVFiG55EcLi8IGfkkzY35NBchaZAOYp
      bsR5v/0IveF+u0NJW5awON59mitDrXN+rhAWH7z7EyzLua0cnaS15RId7XP/nKXlTSaAeUia
      SY7JK/+UEMCZvvP0hwfn9LzRkRGutqR+R9FyduLoh3K6TLqDTABzJITgylArnePddoeybBiW
      yZHO40QSsyuLfXPfv5zSmJv2tlbCIXkuQPqETABz1Bce4NzApWVZzdNOkcQURzqPY85iz7pl
      mVy5tLSNZZaDeCxKx7VWeV5CukUmgDmIGwlO9pyVJ3wXSX94kIuDDz7NOzY6wmB/3xJEtPyc
      bz4lp4GkW2QCmCUhBGf7LzAek7fQi+niYAtj0Zk/YyEEF86eWcKIlpfOjnYS8bjdYUgOIRPA
      LA1FRmgdabc7jGUvYSY40XNmxq2hQgi6r3csbVDLSDwWZXhInlaXpskEMAtJ0+B07zk59bNE
      +sODXB+7d/kCy7LkoaYFunrlklwHkACZAGalY6yTociI3WE8VE73nSdh3r3LJzQxRlTW/VmQ
      vp4uuQ4gATIBPFDCTHJ+4LLc9bPEIokpLg/efXCpuzO1PYQXQlFV0rH9+sjw0EPdMU36hEwA
      D9Ay3MZkQl5x2qFluO2ObmpCCIYHl3b+elXjzA3WK9Y9QoF75l8hPSuHbO+n2mFqftbW16Uq
      vHkZHx3FMGRxOAlmbtYqETPitAy32R3GQytqxLgy1MqG0rW3vjYxvrSnrytramjtHGVTUz1+
      v5/Lxw8wEHGx9bFHKatZyUdtLdSU+mjvGGJFXQWjEY2Na+vpa71A/uZ9lBt9HD/1MUk9gL+g
      lJFLZ5kyonizi9m6bROT/W00X+lly44d6MkRjh45gWEt7t2mZZmEQhOyZ7Ak7wDup2Osc9an
      U6XF0TrSTsKcvloVQjAxMb7kMeiZJZRnGxw73sbq9Q1s3vMso1fPcK2rG0XLZsXKMsBF7Yoa
      1m/ZSffls0xG43Rev871ltN09w6z8alX8ccGGIn7qK4pZvNju+m6eIqCVdtZ2biRPDFKV9/o
      kk0pjY+OLtE7SU4mE8AMDMvgypC8+rdb1IjRPnpj3l8IYlEbErKiMDTURSQcRqiQqZtc6x0g
      Hk8AAiEUFGW6rlHzkXcpqN3IxqY64rEosckQ8aTJZNcpjjdfImkJBAK3L0B1/VriY/0MXT1D
      d9THI1sfJcu1NE3cI5HJJXkfydlkApjBUGSEiJz7d4SrI9ewxPQy/FRkaf9P4vE4wjKIJy0Q
      FomYQfv1MZ59dj9ra2swkiH8xWvZ8/x+fCJJaXUdHt3AVHQio6PUbn2KupVlxG8evhImibhB
      e+sVMjM8ZGR6ycwvpTgnE9OMs1S3AEZS1lGSQBFyQ/BdhBAcvHaE7lCv3aFIgILC03W7yffl
      8j9/+z8QsmEa6NN0twcjMT2oq7qOYlmYN0pTu9zuW4XqNF1HmAb3mtbXdBfCTGIJppvdiyTm
      Is//3/Tk08/xxNPPLcl7Sc4l7wDuIZKYYiAyZHcY0g0CQftoJwhBPB578BOWwM3BH8AyjFuD
      P3BHlVLTuPfgP/295K3vmWZiyQZ/AEOeA5CQCeCeekJ9JE25Tc5Juid6MSwTl+6yO5RlIR3P
      L0ipJxPApwgh6J6QUz9OEzPiDE+NoOnO3bnszcomEAiiqQqKquMP5pLtz3TkYOvx+uwOQXIA
      5/422SRqxBieklvknEYguD7eg9fnW/KzALORUdzAc4+vpXfEIHPyGtdiQapzddx5ZbQf+Tuu
      9IbtDvEObrfb7hAkB5B3AJ/SFxq4te9ccpaeUJ9jDy8JS6ApSeKxBEKBa80f8P6hDwklFSzD
      efsssvzZdocgOYBMAJ8ii745V8yIY2rOG0wBXC6NeNJEWBa67kL3BHn+lS8xeel9rg46b899
      MJhjdwiSA8gEcBshBH1hWSvdsRQwM535I5tdVES48yqtLRfJyimgadcz9J46wLX+MVy6s2LW
      dRf+QMDuMCQHcNZPps2mklHi9yhBLDmH6XHikip0n/6QYa2EDetqef+D9+nvuIKaW8XqNU3k
      B5y14OoPBHC5PXaHITmAXAS+zUQsNKum5JJ9PDlZdodwbyLB2WMHP/n7RDM9d1ezdoS8/AJ0
      fWlKTkjOJu8AbjMWnZixFaHkDFqWG0WTP7YLUVWzEl2ep5CQCeAOE7GQ3SFID6IoBIry7Y4i
      rVVW1dgdguQQMgHcJhR31l5t6W6KolBeu8LuMNJWZpafotIyu8OQHEImgBtMy3RE7X/LMEgm
      71yHEEIw3tPJ2WNXHvwCQmAa5qwbWAoh0q4/bMWqWrtDSFslpeW4XPIQmDRNJoAbkpaBYdnf
      J3XkzEk+ONZFIhpjKjRJNJogGRrle9/+ewwByUSSRDRKIp4kEppkajKGEIJkNMbkxCTJZIxD
      3/sp4XAEwzBIJgyik1PE4wkEAiORwBKCRDTKZChCdGKCAz84zNRklORtjzEtc/q54SlMy2Rq
      Ikw06owdUqpHJzdPTgPNR11DI7qDy2lIS0v+JNyQNJM4oTK2sCzM+CR/+1//F2ZWKVMRneee
      q6Gza5yS1nbaPjzI2ITFtr0baT7aQjI0ye43XuX4n/0VWnaAyrUNfPzDAwyOT7H58ZW8+8eH
      EL5M8kuD7H/9RU799VuU7NvOu9/6GzILcymvL+PQDz4gNpVETYTZ843Pcvqv3yJ/dwMH/u+7
      mL5sdj5ezrGj3ViJGK/+29cJuu3dihk146xt2sgH771jaxzpxuVys6px7YMfKD005B3ADXEj
      jjXriZNFJiw8hQ289s9foTTXRfbKetbv3Mq+l3eQiFt8/tdep3ZVCX6fhmKF6b42gduloPtz
      WdFUT+OOR3jxm5+jIAvMQDlv/PpX8MbiCMBMJBi7coHK3c/z5X/5GtufeIR1O7bwma88jphK
      IODWHUAiq4Rv/saXuHKimezibNzxEB099pdjNi2DLY8+jqI480yAU61qXEt2tjwAJn1CJoAb
      DMsEB9wB3CLEdI/BGzEJBAiBL1hMfsBF+6Hj5G3dxcZN5Siqi20vv8ia+kwO/vgkuhmlbyiC
      aSmsbKic/k9W4owNhxganMAT8NPf08XEwBDRhCARCRMJRT95zMA4ilBY2VCFpqgEM/2UrV7D
      zi88S0W+/fPHMSNOlt9PXUOj3aGklfUbNzu6mqq09LQ333zzTbuDcIKJWIiO8a7pgdZGiqaT
      GQxSUBggtzgXV4aPnKI8MjJ95Bbm4PH5yC3KJSOYweWPTmL5C6hbU8Xg5WaudUbZ9tSjVFYG
      OHvwNLl19eTmBQjm+vFnqJz86SmC1VU0bn8Ed+g6Fy92U9JQR5aY4GzzME1bqzn505MEqqqp
      XVOD3+8nmOenvL6C1kMnGQubVDfW4NHtvfLOcPmoL1hJRkYmZ0+fsDWWdFFcUsaefftlApDu
      IFtC3tA13sMHHR9hyY/D8YLebF5YvQ/Lsvh/v/stero67Q7J8T7/pa/StGmL3WFIDiOngKS0
      c/O0tqqq7N67T64FPEBxSRmr1663OwzJgWQCuMGluVAc2btp/oQQn+xsEgJhWY5a5pgvl/ZJ
      GYO6hjWsqK23MRrne3zvPtyy+Jt0D3JCcLkQgqmJIT566wRbXnkefeQ6P/7OYSzdxfbPPY/W
      38L7756jYO069jyzCTWNc52mfFLITFVV9uzbz7W2qwhL1nH6tJV1DdSvXmN3GJJDyTuAGzy6
      G0VJ54/DpK25lb4rPYRN0DMC7P3q59m5q5ID//A+b3/vKC/84lcQV05ydTBud7AL4tbv3IlU
      VlHFY7uetCka53K53ex97jO4XLLwm3Rv6TzipZSmaOk9AaTorNu9jcrKAALQPF5Ofudv+PZ/
      +iFbnthCll/jxIHjDPSP0nctvXseu7U7BzRFUdj15NMEc3JtisiZdu7eS0lpud1hSA4mE8AN
      me4MVHW51EgXoOo8+U++yuv/5vMce/sUn/2nXyTo08n055Bblt7tALPcmXd9zZeRwee++Fqa
      38WlTvXKOnbs3ouqys9DmplcA7hBUzVcqk6c9JweMeMxjn7/xzSfukqn+feUZuv09ofQjTCl
      67fT/O5HtHeOEtFyWF3ptTvcBfHq946/qmYlO3bv4fDBd8Epp7pt4A8E2P/SK7jc9h/ak5xN
      ngO4zbuth+gN99sdRooIjEQSU6h4PDrCsohGYvj8Gek91QXsWbGTskDJPb8nhOCv/uQPuHzh
      7BJH5Qxut4dXXvsa9Q1y4Vd6MHl/eJssT4bdIaSQgu524/FM3+QpqkrGMhj8FRSyvf6Zv68o
      vPTqVyivrF66oBxCURT27NtPXf1qu0OR0oRMALfJy5CLiE6nazp+z/37Avt8GbzyM197qBaF
      FUVh155n2PbYLhQ57y/NkvxJuU22x3/HHnPJeQKema/+bxfMyeWrr/8zsvzZixyR/RRFYeuO
      x3niqWdRNfnzK82eTAC3CXiz0ZfNTqDlqTS7eNaPzS8o5Ou/8CsEc/MWMSJ73bzyf3b/S2hy
      8JfmSCaA23h0N9mzvMKU7JHjC87p8fkFhXz953+ZimXYCN3tdvP43n08+bS88pfmRyaAT5nL
      Faa0tFyqixJ/4ZyfF8zJ5bVv/AKN65qWTeE4j9fLS6/8zPTgL+9apXmSCeBTcjOCqPIwkSMF
      vP47CsHNhdfn49XXvsGzL3wu7adKikpKeeOXfo01TRvlwTdpQeRBsE8pyMzHq3uYSkbtDkX6
      lLLse+/9ny1FUdi2YzeV1Sv43l//GUMD6XXmw+32sGHzVp567gWGw4ATAAAFDklEQVQ83vQ+
      zCc5gzwIdg+HOo7RMSabjDiJgsLzq/aSm5GaMhaGkeTgO//IkUMHMA0jJa+5WBRFobC4hH2f
      +RwrauuXzTSWZD+ZAO6hc7ybD9qP2t4eUvpEwJPNi437Uv66I8NDHHznx1w4exrTNFP++gsV
      COaw68mnadq8Fbcs7SClmEwA9xA3Evzo8jtEklN2hyLd0FS8hvUli9cEvre7kyOHDnLx3Bnb
      7wgURSE7EGTD5q1s27mbzMz7H3yTpPmSCWAGp3vPcX7gst1hSIBL1Xm+4WmyH3ACOBVGhoc4
      fOAdLp0/SywWZSl/PVRVo6CoiMce30N9wxoyMu+ueipJqSQTwAxGpsZ4++pBDMvZ88MPg7Ls
      Evas3Lmk72kYSS6dP8eVi+e4fOEshmkuSscxVdXIycujoXEtjes2UFZRJef4pSUjE8B9vNd2
      mJ5Qn91hPNQUFPas3Gnr+QzDSNLeepW2q1fo7uygr7cby7QQwprTHYKqqiiKgj87QH5BESvr
      G6isrpGDvmQbmQDuoy80wIFrhzGF7DVrl4LMfJ6td1a7R8NIMtjfx8T4GCPDQ0yGw8SiU0yG
      w3dsHPB5fXh9PjL92WRl+cnNLyAQzCEvv0AO+JIjyHMA91GSXURuRi5DkWG7Q3koKUBDQa3d
      YdxF112UlldSWl5pdyiStCDyGOEDrC1qkCeDbZLjy6E6p8LuMCRp2ZIj2wOUB0ooyiqwO4yH
      joLCxtK1dochScuaTACzsKl0HS5VzpYtpWJ/gSzMJ0mLTCaAWcjNyKFKTkUsGZfqYmPpervD
      kKRlTyaAWdpQsuaBrQil1KjLryEvRTV/JEmamUwAs+Rz+WgqXiMXhBdZri+HdcWLV/JBkqRP
      yNFsDmpyK6kKyqmgxeJSdTaXrcc9z5r/kiTNjUwAc7S5bN2S1KR5GDUWraJ4Hh2/JEmaH5kA
      5sjn8rGjaiu63BWUUuXZJayXUz+StKRkApiH/Mw81hevRkEe50+FLHcmWys22R2GJD10ZAKY
      pzVFDTQU1MkksEAuzcXO6m1kujPsDkWSHjoyASzAxtK1lMnDSvPmUnV2VW+nIDPP7lAk6aEk
      E8ACaKrGzurtC25W/jDSVZ1NZU0ygUqSjWQCWCCXNn0VK3evzJ6CwvriRurzV9gdiiQ91GQ/
      gBSJG3EOX/+Y3lC/3aE4mq7qbCxZS0Nhnd2hSNJDTyaAFEqaBoc6jsouYjNwqS62lG9gZV61
      3aFIkoRMAClnWibHuk5xbfT6Hd2hHnZuzcXumsfkVJkkOYhMAIvkfP9lzvZfkO0kgVxfkCdW
      7JBbPSXJYWQCWES9oX6Odp4kkpyyOxTbVAbKeKR8gxz8JcmBZAJYZNFklCPXT9AbfrgWh+V8
      vyQ5n0wAS8C0TDrGu/i46zSGZdgdzqLL9eXwxIrH5FW/JDmcTABLaDIe4UzfeTrGupblArG8
      6pek9CITgA06xro413+J8diE3aGkhK7q1ObV0FhYL6/6JSmNyARgE9My6Zro4Vz/5bRNBLqq
      URWsoLGwnqAvYHc4kiTNkUwANkvHRKCrOjU5lTQU1MqBX5LSmEwADmFaJn3hATrHe+gY63Tk
      +QG/J4uanEpq82rkVI8kLQMyAThQOD5J20gH18e7CcXDtsaiqzoVgVJqcqtk5U5JWmZkAnAw
      IQSj0XH6wwMMRkboDw8u+jZSTdHIcPuozqmg1F9MXkYOmqot6ntKkmSP/w8zl9LC+onxXQAA
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
